{
  "contractName": "Marex",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "event_int",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "event_string",
          "type": "string"
        }
      ],
      "name": "Fric",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "event_string",
          "type": "address"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "event_string",
          "type": "string"
        }
      ],
      "name": "LogS",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "event_uint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "event_block",
          "type": "uint256"
        }
      ],
      "name": "MaturityEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "event_int",
          "type": "uint256"
        }
      ],
      "name": "Test",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ERC20Interface",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "activationDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "authorizedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "holders",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "initialPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "investorLock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "liquidityProviderLock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maturityDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maximumLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maximumPayout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maximumSender",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "payoutRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "providerType",
      "outputs": [
        {
          "internalType": "enum Marex.addressType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "senderList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "strikePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whitelistedInvestor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whitelistedLiquidityProvider",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "payout_ratio",
          "type": "uint256"
        }
      ],
      "name": "setPayoutRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initial_price",
          "type": "uint256"
        }
      ],
      "name": "setInitialPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "strike_price",
          "type": "uint256"
        }
      ],
      "name": "setStrikePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maturity_minute",
          "type": "uint256"
        }
      ],
      "name": "addMaturity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maximum_liquidity",
          "type": "uint256"
        }
      ],
      "name": "setMaximumLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "switchLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "address_",
          "type": "address"
        }
      ],
      "name": "addNewToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "liquidityAmount",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "oraclePrice",
          "type": "uint256"
        }
      ],
      "name": "payout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"event_int\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"event_string\",\"type\":\"string\"}],\"name\":\"Fric\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"event_string\",\"type\":\"address\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"event_string\",\"type\":\"string\"}],\"name\":\"LogS\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"event_uint\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"event_block\",\"type\":\"uint256\"}],\"name\":\"MaturityEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"event_int\",\"type\":\"uint256\"}],\"name\":\"Test\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC20Interface\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activationDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidityAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maturity_minute\",\"type\":\"uint256\"}],\"name\":\"addMaturity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"address_\",\"type\":\"address\"}],\"name\":\"addNewToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"authorizedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"holders\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investorLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityProviderLock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maturityDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumPayout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumSender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oraclePrice\",\"type\":\"uint256\"}],\"name\":\"payout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payoutRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerType\",\"outputs\":[{\"internalType\":\"enum Marex.addressType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senderList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initial_price\",\"type\":\"uint256\"}],\"name\":\"setInitialPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maximum_liquidity\",\"type\":\"uint256\"}],\"name\":\"setMaximumLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"payout_ratio\",\"type\":\"uint256\"}],\"name\":\"setPayoutRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"strike_price\",\"type\":\"uint256\"}],\"name\":\"setStrikePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strikePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"switchLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelistedInvestor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelistedLiquidityProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addNewToken(string,address)\":{\"details\":\"add address of token to list of supported tokens using token symbol as identifier in mapping\"}},\"stateVariables\":{\"authorizedTokens\":{\"details\":\"list of all supported tokens for transfer  string token symbol  address contract address of token\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/rems/block/lol/contracts/Marex.sol\":\"Marex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/rems/block/lol/contracts/Marex.sol\":{\"keccak256\":\"0x56cfecd23211ccf753c06bf0d5cda21724a3b8a26fcbee1e65c1418bc93bb922\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f743838b5adb845f277a3299be7d171ad93cad4dfebab379442cf50b4b9621\",\"dweb:/ipfs/QmNTvK3w4J3wMaiHdEXTGtwHn5bn8XhPZQdo2ZCcWsm9wb\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x6080604052600a600255601e60035560006004554260058190556100249060b4610078565b6006556007805460ff19169055612710600881905560025461004591610090565b6009556009546008546100589190610078565b600a55600b805461ffff1916905534801561007257600080fd5b506100c5565b6000821982111561008b5761008b6100af565b500190565b60008160001904831182151516156100aa576100aa6100af565b500290565b634e487b7160e01b600052601160045260246000fd5b610d42806100d46000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638d3e5f2d1161010f578063ce7c2ac2116100a2578063e115234311610071578063e115234314610388578063e488cd9f1461039b578063f10ff2de146103ae578063fc5cd246146103b6576101e5565b8063ce7c2ac21461035d578063cf30901214610370578063d27a597214610378578063d59624b414610380576101e5565b80639f4ba0ee116100de5780639f4ba0ee1461031a578063a59b2de61461032d578063afd2a01c1461034d578063c52987cf14610355576101e5565b80638d3e5f2d146102e457806391c4101c146102f75780639c2d0664146102ff5780639d4e13da14610312576101e5565b80632740728e11610187578063433ff28811610156578063433ff288146102b657806362e9fa2c146102c95780638610404c146102b657806389439c05146102d1576101e5565b80632740728e146102685780632a11ced014610288578063309818f41461029b578063432c919a146102a3576101e5565b806311da60b4116101c357806311da60b41461023d5780631bbc4b83146102455780631d0806ae1461024d5780632010b1ed14610255576101e5565b80630403aa3b146101ea5780630b098d85146102085780630ffe9d521461021d575b600080fd5b6101f26103c9565b6040516101ff9190610c70565b60405180910390f35b61021b610216366004610b74565b6103cf565b005b61023061022b366004610a55565b6103d4565b6040516101ff9190610bec565b61021b6103fa565b610230610510565b6101f261051f565b610230610263366004610b74565b610525565b61027b610276366004610a90565b61054f565b6040516101ff9190610c3d565b610230610296366004610b74565b61059a565b61027b6105b5565b61021b6102b1366004610adc565b6105be565b61021b6102c4366004610b31565b610683565b61021b610882565b6102306102df366004610b74565b6108ac565b61027b6102f2366004610a14565b6108bc565b6101f26108d1565b61021b61030d366004610b74565b6108d7565b6101f26108f5565b61021b610328366004610b74565b6108fb565b61034061033b366004610a14565b610900565b6040516101ff9190610c48565b6101f2610915565b6101f261091b565b6101f261036b366004610a14565b610921565b61027b610933565b6101f261093c565b6101f2610942565b6101f2610396366004610b74565b610948565b61021b6103a9366004610b74565b610964565b61027b610969565b61021b6103c4366004610b74565b610977565b60055481565b600255565b80516020818301810180516012825292820191909301209152546001600160a01b031681565b600454600061040882610948565b90506000601260405161041a90610bdd565b90815260405190819003602001812054600080546001600160a01b0319166001600160a01b039283169081179182905563a9059cbb60e01b84529350169063a9059cbb9061046e9033908690600401610c24565b602060405180830381600087803b15801561048857600080fd5b505af115801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c09190610a35565b503360009081526011602052604080822091909155517f96ade0f1f5bcb55715ca55b0ec0d2a69bc3af69979945687d88827f582be382190610503908490610c79565b60405180910390a1505050565b6000546001600160a01b031681565b60035481565b600c818154811061053557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816012846040516105629190610ba4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550600192915050565b6010602052600090815260409020546001600160a01b031681565b600b5460ff1681565b60006012846040516105d09190610ba4565b90815260405190819003602001812054600080546001600160a01b0319166001600160a01b03928316908117918290556323b872dd60e01b8452935033929116906323b872dd9061062990849088908890600401610c00565b602060405180830381600087803b15801561064357600080fd5b505af1158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610a35565b505050505050565b60006012836040516106959190610ba4565b90815260405190819003602001812054600080546001600160a01b0319166001600160a01b039283169081178083556370a0823160e01b855290945090929116906370a08231906106ea903090600401610bec565b60206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610b8c565b6000546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd9061076f90339030908890600401610c00565b602060405180830381600087803b15801561078957600080fd5b505af115801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c19190610a35565b50600080546040516370a0823160e01b81526001600160a01b03909116906370a08231906107f3903090600401610bec565b60206040518083038186803b15801561080b57600080fd5b505afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190610b8c565b905061084f8483610ca9565b81141561087b573360009081526011602052604081208054869290610875908490610ca9565b90915550505b5050505050565b60075460ff161561089c576007805460ff191690556108aa565b6007805460ff191660011790555b565b600d818154811061053557600080fd5b600e6020526000908152604090205460ff1681565b60095481565b6108e281603c610cc1565b6006546108ef9190610ca9565b60065550565b60025481565b600355565b60016020526000908152604090205460ff1681565b60085481565b60045481565b60116020526000908152604090205481565b60075460ff1681565b600a5481565b60065481565b6000600454821061095b5750601461095f565b5060505b919050565b600455565b600b54610100900460ff1681565b600855565b80356001600160a01b038116811461095f57600080fd5b600082601f8301126109a3578081fd5b813567ffffffffffffffff808211156109be576109be610cf6565b604051601f8301601f1916810160200182811182821017156109e2576109e2610cf6565b6040528281528483016020018610156109f9578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610a25578081fd5b610a2e8261097c565b9392505050565b600060208284031215610a46578081fd5b81518015158114610a2e578182fd5b600060208284031215610a66578081fd5b813567ffffffffffffffff811115610a7c578182fd5b610a8884828501610993565b949350505050565b60008060408385031215610aa2578081fd5b823567ffffffffffffffff811115610ab8578182fd5b610ac485828601610993565b925050610ad36020840161097c565b90509250929050565b600080600060608486031215610af0578081fd5b833567ffffffffffffffff811115610b06578182fd5b610b1286828701610993565b935050610b216020850161097c565b9150604084013590509250925092565b60008060408385031215610b43578182fd5b823567ffffffffffffffff811115610b59578283fd5b610b6585828601610993565b95602094909401359450505050565b600060208284031215610b85578081fd5b5035919050565b600060208284031215610b9d578081fd5b5051919050565b60008251815b81811015610bc45760208186018101518583015201610baa565b81811115610bd25782828501525b509190910192915050565b621514d560ea1b815260030190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020810160028310610c6a57634e487b7160e01b600052602160045260246000fd5b91905290565b90815260200190565b908152604060208201819052600f908201526e53656e64206d6f6e6579206261636b60881b606082015260800190565b60008219821115610cbc57610cbc610ce0565b500190565b6000816000190483118215151615610cdb57610cdb610ce0565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209987ba39fd0579aa4b79a0b1ef86761ae376711016db293d476b9f4e488b8d5c64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638d3e5f2d1161010f578063ce7c2ac2116100a2578063e115234311610071578063e115234314610388578063e488cd9f1461039b578063f10ff2de146103ae578063fc5cd246146103b6576101e5565b8063ce7c2ac21461035d578063cf30901214610370578063d27a597214610378578063d59624b414610380576101e5565b80639f4ba0ee116100de5780639f4ba0ee1461031a578063a59b2de61461032d578063afd2a01c1461034d578063c52987cf14610355576101e5565b80638d3e5f2d146102e457806391c4101c146102f75780639c2d0664146102ff5780639d4e13da14610312576101e5565b80632740728e11610187578063433ff28811610156578063433ff288146102b657806362e9fa2c146102c95780638610404c146102b657806389439c05146102d1576101e5565b80632740728e146102685780632a11ced014610288578063309818f41461029b578063432c919a146102a3576101e5565b806311da60b4116101c357806311da60b41461023d5780631bbc4b83146102455780631d0806ae1461024d5780632010b1ed14610255576101e5565b80630403aa3b146101ea5780630b098d85146102085780630ffe9d521461021d575b600080fd5b6101f26103c9565b6040516101ff9190610c70565b60405180910390f35b61021b610216366004610b74565b6103cf565b005b61023061022b366004610a55565b6103d4565b6040516101ff9190610bec565b61021b6103fa565b610230610510565b6101f261051f565b610230610263366004610b74565b610525565b61027b610276366004610a90565b61054f565b6040516101ff9190610c3d565b610230610296366004610b74565b61059a565b61027b6105b5565b61021b6102b1366004610adc565b6105be565b61021b6102c4366004610b31565b610683565b61021b610882565b6102306102df366004610b74565b6108ac565b61027b6102f2366004610a14565b6108bc565b6101f26108d1565b61021b61030d366004610b74565b6108d7565b6101f26108f5565b61021b610328366004610b74565b6108fb565b61034061033b366004610a14565b610900565b6040516101ff9190610c48565b6101f2610915565b6101f261091b565b6101f261036b366004610a14565b610921565b61027b610933565b6101f261093c565b6101f2610942565b6101f2610396366004610b74565b610948565b61021b6103a9366004610b74565b610964565b61027b610969565b61021b6103c4366004610b74565b610977565b60055481565b600255565b80516020818301810180516012825292820191909301209152546001600160a01b031681565b600454600061040882610948565b90506000601260405161041a90610bdd565b90815260405190819003602001812054600080546001600160a01b0319166001600160a01b039283169081179182905563a9059cbb60e01b84529350169063a9059cbb9061046e9033908690600401610c24565b602060405180830381600087803b15801561048857600080fd5b505af115801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c09190610a35565b503360009081526011602052604080822091909155517f96ade0f1f5bcb55715ca55b0ec0d2a69bc3af69979945687d88827f582be382190610503908490610c79565b60405180910390a1505050565b6000546001600160a01b031681565b60035481565b600c818154811061053557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000816012846040516105629190610ba4565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550600192915050565b6010602052600090815260409020546001600160a01b031681565b600b5460ff1681565b60006012846040516105d09190610ba4565b90815260405190819003602001812054600080546001600160a01b0319166001600160a01b03928316908117918290556323b872dd60e01b8452935033929116906323b872dd9061062990849088908890600401610c00565b602060405180830381600087803b15801561064357600080fd5b505af1158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190610a35565b505050505050565b60006012836040516106959190610ba4565b90815260405190819003602001812054600080546001600160a01b0319166001600160a01b039283169081178083556370a0823160e01b855290945090929116906370a08231906106ea903090600401610bec565b60206040518083038186803b15801561070257600080fd5b505afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610b8c565b6000546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd9061076f90339030908890600401610c00565b602060405180830381600087803b15801561078957600080fd5b505af115801561079d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c19190610a35565b50600080546040516370a0823160e01b81526001600160a01b03909116906370a08231906107f3903090600401610bec565b60206040518083038186803b15801561080b57600080fd5b505afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190610b8c565b905061084f8483610ca9565b81141561087b573360009081526011602052604081208054869290610875908490610ca9565b90915550505b5050505050565b60075460ff161561089c576007805460ff191690556108aa565b6007805460ff191660011790555b565b600d818154811061053557600080fd5b600e6020526000908152604090205460ff1681565b60095481565b6108e281603c610cc1565b6006546108ef9190610ca9565b60065550565b60025481565b600355565b60016020526000908152604090205460ff1681565b60085481565b60045481565b60116020526000908152604090205481565b60075460ff1681565b600a5481565b60065481565b6000600454821061095b5750601461095f565b5060505b919050565b600455565b600b54610100900460ff1681565b600855565b80356001600160a01b038116811461095f57600080fd5b600082601f8301126109a3578081fd5b813567ffffffffffffffff808211156109be576109be610cf6565b604051601f8301601f1916810160200182811182821017156109e2576109e2610cf6565b6040528281528483016020018610156109f9578384fd5b82602086016020830137918201602001929092529392505050565b600060208284031215610a25578081fd5b610a2e8261097c565b9392505050565b600060208284031215610a46578081fd5b81518015158114610a2e578182fd5b600060208284031215610a66578081fd5b813567ffffffffffffffff811115610a7c578182fd5b610a8884828501610993565b949350505050565b60008060408385031215610aa2578081fd5b823567ffffffffffffffff811115610ab8578182fd5b610ac485828601610993565b925050610ad36020840161097c565b90509250929050565b600080600060608486031215610af0578081fd5b833567ffffffffffffffff811115610b06578182fd5b610b1286828701610993565b935050610b216020850161097c565b9150604084013590509250925092565b60008060408385031215610b43578182fd5b823567ffffffffffffffff811115610b59578283fd5b610b6585828601610993565b95602094909401359450505050565b600060208284031215610b85578081fd5b5035919050565b600060208284031215610b9d578081fd5b5051919050565b60008251815b81811015610bc45760208186018101518583015201610baa565b81811115610bd25782828501525b509190910192915050565b621514d560ea1b815260030190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020810160028310610c6a57634e487b7160e01b600052602160045260246000fd5b91905290565b90815260200190565b908152604060208201819052600f908201526e53656e64206d6f6e6579206261636b60881b606082015260800190565b60008219821115610cbc57610cbc610ce0565b500190565b6000816000190483118215151615610cdb57610cdb610ce0565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209987ba39fd0579aa4b79a0b1ef86761ae376711016db293d476b9f4e488b8d5c64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:449:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "62:80:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "89:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "91:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "91:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "91:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "78:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "85:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "81:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "81:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "75:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "72:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "120:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "131:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "134:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "127:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "120:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "45:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "48:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "54:3:9",
                "type": ""
              }
            ],
            "src": "14:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "199:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "260:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "230:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "223:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "223:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "216:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "216:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "238:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "249:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:6:9"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "253:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "241:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "241:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "235:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "212:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "212:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "209:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "289:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "304:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "307:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "300:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "300:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "289:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "178:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "181:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "187:7:9",
                "type": ""
              }
            ],
            "src": "147:168:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "352:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "369:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "376:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "381:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "372:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "372:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "362:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "362:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "409:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "412:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "402:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "402:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "402:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "436:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "426:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "426:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "426:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "320:127:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7207:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:9",
                "type": ""
              }
            ],
            "src": "14:175:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "249:658:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "298:24:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "307:5:9"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "314:5:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "300:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "300:20:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "300:20:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "277:6:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "285:4:9",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "273:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "273:17:9"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "292:3:9"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "269:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "269:27:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "262:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "262:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "259:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "331:30:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "354:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "341:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:20:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "335:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "370:28:9",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "380:18:9",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "374:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "421:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "423:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "413:2:9"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "417:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "410:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:10:9"
                  },
                  "nodeType": "YulIf",
                  "src": "407:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "452:23:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "472:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "466:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:9:9"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "456:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:69:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "510:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "526:2:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "530:4:9",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "522:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "522:13:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "541:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:7:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "518:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "518:27:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "506:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:40:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "548:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "502:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:51:9"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "488:10:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "612:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "614:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "614:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "614:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "571:10:9"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "583:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "568:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "591:10:9"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "603:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "588:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "588:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "565:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:46:9"
                  },
                  "nodeType": "YulIf",
                  "src": "562:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "650:2:9",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "654:10:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "643:22:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "643:22:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "681:6:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "689:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "674:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:18:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "674:18:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "740:24:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "749:5:9"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "756:5:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "742:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "742:20:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "742:20:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "715:6:9"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "723:2:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "711:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "711:15:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "728:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "707:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "707:26:9"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "735:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "704:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:35:9"
                  },
                  "nodeType": "YulIf",
                  "src": "701:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "790:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "798:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "809:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "817:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:17:9"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "824:2:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "773:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:54:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "851:6:9"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "859:2:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "847:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "847:15:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "864:4:9",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "843:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:26:9"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "871:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "836:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "836:41:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "886:15:9",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "895:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "886:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "223:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "231:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "239:5:9",
                "type": ""
              }
            ],
            "src": "194:713:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "982:128:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1028:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1037:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1045:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1030:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1030:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1030:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1003:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1012:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "999:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "999:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1024:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "995:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "995:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "992:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1063:41:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1094:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1073:20:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1073:31:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1063:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "948:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "959:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "971:6:9",
                "type": ""
              }
            ],
            "src": "912:198:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:219:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1239:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1248:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1256:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1241:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1241:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1241:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1214:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1223:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1210:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1235:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1206:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1203:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1274:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1293:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1287:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1287:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1278:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1356:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1365:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1373:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1358:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1358:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1358:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1325:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1346:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1339:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1339:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1332:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1332:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1322:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1322:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1315:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1312:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1391:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1401:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1391:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1159:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1170:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1182:6:9",
                "type": ""
              }
            ],
            "src": "1115:297:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1497:264:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1543:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1552:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1560:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1545:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1545:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1545:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1518:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1527:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1514:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1514:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1510:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1510:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1507:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1578:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1592:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1592:23:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1582:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1658:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1667:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1675:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1660:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1660:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1660:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1630:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1638:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1627:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1627:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1624:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1693:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1727:9:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1738:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1723:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:22:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1747:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1703:19:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:52:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1693:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1463:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1474:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1486:6:9",
                "type": ""
              }
            ],
            "src": "1417:344:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1863:323:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1909:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1918:6:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1926:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1911:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1911:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1911:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1884:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1893:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1880:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1880:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1905:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1876:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1876:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1873:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1944:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1971:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1958:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1958:23:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1948:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2024:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2033:6:9"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2041:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2026:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2026:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2026:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1996:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2004:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1993:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1993:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1990:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2059:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2093:9:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2104:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2089:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2089:22:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2113:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "2069:19:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2069:52:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2059:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2130:50:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2165:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2176:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2161:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2161:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2140:20:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2140:40:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2130:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1821:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1832:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1844:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1852:6:9",
                "type": ""
              }
            ],
            "src": "1766:420:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2305:374:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2351:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2360:6:9"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2368:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2353:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2353:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2353:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2326:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2335:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2322:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2322:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2347:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2318:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2315:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2386:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2413:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2400:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:23:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2390:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2466:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2475:6:9"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2483:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2468:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2468:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2468:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2438:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2446:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2435:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2435:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2432:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2501:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2535:9:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2546:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2531:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2531:22:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2555:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "2511:19:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2511:52:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2501:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2572:50:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2607:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2618:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2603:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2603:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2582:20:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2582:40:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2572:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2631:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2658:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2669:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2654:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2654:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2641:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2641:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2631:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2255:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2266:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2278:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2286:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2294:6:9",
                "type": ""
              }
            ],
            "src": "2191:488:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2781:315:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2827:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2836:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2844:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2829:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2829:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2829:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2802:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2811:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2798:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2798:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2823:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2794:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2791:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2862:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2889:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2876:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:23:9"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2866:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2942:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2951:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2959:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2944:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2944:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2944:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2914:6:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2922:18:9",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2911:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2911:30:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2908:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2977:62:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3011:9:9"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3022:6:9"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3007:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3007:22:9"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3031:7:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "2987:19:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:52:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2977:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3048:42:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3075:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3086:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3071:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3071:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3058:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3058:32:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3048:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2739:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2750:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2762:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2770:6:9",
                "type": ""
              }
            ],
            "src": "2684:412:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3171:120:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3217:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3226:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3234:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3219:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3219:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3219:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3192:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3201:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3188:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3188:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3213:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3184:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3181:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3252:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3275:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3262:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3252:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3137:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3148:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3160:6:9",
                "type": ""
              }
            ],
            "src": "3101:190:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3377:113:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3423:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3432:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3440:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3425:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3425:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3425:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3398:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3407:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3394:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3394:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3419:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3390:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3390:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3387:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3458:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3474:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3468:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3468:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3458:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3343:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3354:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3366:6:9",
                "type": ""
              }
            ],
            "src": "3296:194:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3634:293:9",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3644:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3664:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3658:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3658:13:9"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3648:6:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3680:12:9",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "3689:3:9"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3684:1:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3753:77:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3778:3:9"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3783:1:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3774:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3774:11:9"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3801:6:9"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3809:1:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3797:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3797:14:9"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3813:4:9",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3793:3:9"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3793:25:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3787:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3787:32:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3767:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3767:53:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3767:53:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3712:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3715:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3709:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3709:13:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3723:21:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3725:17:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3734:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3737:4:9",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3730:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3730:12:9"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3725:1:9"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3705:3:9",
                    "statements": []
                  },
                  "src": "3701:129:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3856:33:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3869:3:9"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3874:6:9"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3865:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3865:16:9"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "3883:3:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3858:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3858:29:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3858:29:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3845:1:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3848:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3842:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3842:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3839:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3898:23:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3909:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3914:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3905:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3898:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3610:3:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3615:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3626:3:9",
                "type": ""
              }
            ],
            "src": "3495:432:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4124:61:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4141:3:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4146:5:9",
                        "type": "",
                        "value": "TST"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4134:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4134:18:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4134:18:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4161:18:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4172:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4177:1:9",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4168:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4168:11:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4161:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4108:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4116:3:9",
                "type": ""
              }
            ],
            "src": "3932:253:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4291:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4301:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4313:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4324:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4309:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4309:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4301:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4343:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4358:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4374:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4379:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4370:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4370:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4383:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4366:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4366:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4354:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4354:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4336:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4336:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4336:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4260:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4271:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4282:4:9",
                "type": ""
              }
            ],
            "src": "4190:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4515:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4525:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4537:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4548:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4533:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4533:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4525:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4567:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4582:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4598:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4603:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4594:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4594:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4607:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4590:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4590:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4578:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4578:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4560:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4560:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4484:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4495:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4506:4:9",
                "type": ""
              }
            ],
            "src": "4398:219:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4779:218:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4789:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4801:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4812:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4797:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4797:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4789:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4824:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4842:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4847:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4838:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4838:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4851:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4834:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4834:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4828:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4869:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4884:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4892:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4880:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4880:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4862:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4862:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4862:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4916:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4927:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4912:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4912:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4936:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4944:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4932:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4932:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4905:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4905:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4905:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4968:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4979:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4964:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4964:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4984:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4957:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4957:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4957:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4732:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4743:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4751:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4759:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4770:4:9",
                "type": ""
              }
            ],
            "src": "4622:375:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5131:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5141:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5153:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5164:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5149:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5149:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5141:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5183:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5198:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5214:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5219:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5210:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5210:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5223:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5206:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5206:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5194:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5194:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5176:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5176:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5176:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5247:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5258:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5243:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5243:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5263:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5236:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5236:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5236:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5092:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5103:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5111:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5122:4:9",
                "type": ""
              }
            ],
            "src": "5002:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5376:92:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5386:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5398:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5409:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5394:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5394:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5386:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5428:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5453:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5446:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5446:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5439:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5439:22:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5421:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5421:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5421:41:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5345:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5356:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5367:4:9",
                "type": ""
              }
            ],
            "src": "5281:187:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5588:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5598:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5610:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5621:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5606:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5606:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5598:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5640:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5655:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5671:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5676:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5667:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5667:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5680:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5663:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5663:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5651:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5651:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5633:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5633:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5633:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$1862__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5557:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5568:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5579:4:9",
                "type": ""
              }
            ],
            "src": "5473:217:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5808:229:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5818:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5830:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5841:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5826:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5826:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5818:4:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5886:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5907:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5914:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5919:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "5910:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5910:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5900:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5900:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5900:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5951:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5954:4:9",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5944:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5944:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5944:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5979:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5982:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5972:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5972:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5972:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5866:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5874:1:9",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5863:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5863:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5856:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:21:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5853:2:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6013:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6024:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6006:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6006:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6006:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_addressType_$12__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5777:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5788:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5799:4:9",
                "type": ""
              }
            ],
            "src": "5695:342:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6143:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6153:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6165:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6176:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6161:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6161:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6153:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6195:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6206:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6188:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6188:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6188:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6112:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6123:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6134:4:9",
                "type": ""
              }
            ],
            "src": "6042:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6426:209:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6443:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6454:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6436:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6436:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6436:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6481:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6492:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6477:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6477:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6497:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6470:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6470:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6470:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6520:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6531:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6516:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6516:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6536:2:9",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6509:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6509:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6509:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6559:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6570:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6555:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6555:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6575:17:9",
                        "type": "",
                        "value": "Send money back"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6548:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6548:45:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6548:45:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6602:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6614:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6625:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6610:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6610:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6602:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_stringliteral_ce2867f715b095490f0ce03c5b061cb8f671277719e8b1ede616cc5a7a1e64d3__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6395:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6406:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6417:4:9",
                "type": ""
              }
            ],
            "src": "6224:411:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6688:80:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6715:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6717:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6717:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6717:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6704:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6711:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6707:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6707:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6701:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6701:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "6698:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6746:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6757:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6760:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6753:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6753:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6746:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6671:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6674:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6680:3:9",
                "type": ""
              }
            ],
            "src": "6640:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6825:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6884:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6886:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6886:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6886:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6856:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6849:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6849:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6842:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6842:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6864:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6875:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "6871:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6871:6:9"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6879:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "6867:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6867:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6861:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6861:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6838:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6838:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "6835:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6915:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6930:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6933:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6926:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6926:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6915:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6804:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6807:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6813:7:9",
                "type": ""
              }
            ],
            "src": "6773:168:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6978:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6995:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7002:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7007:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6998:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6998:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6988:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6988:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6988:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7035:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7038:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7028:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7028:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7028:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7059:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7062:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7052:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7052:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7052:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6946:127:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7110:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7127:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7134:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7139:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7130:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7130:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7120:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7120:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7120:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7167:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7170:4:9",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7160:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7160:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7160:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7191:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7194:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7184:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7184:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7184:15:9"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7078:127:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), end) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"TST\")\n        end := add(pos, 3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_ERC20_$1862__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_addressType_$12__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_stringliteral_ce2867f715b095490f0ce03c5b061cb8f671277719e8b1ede616cc5a7a1e64d3__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), 15)\n        mstore(add(headStart, 96), \"Send money back\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "327:11557:0:-:0;;;565:2;539:28;;600:2;573:29;;-1:-1:-1;608:27:0;;709:15;680:44;;;;810:26;;827:9;810:26;:::i;:::-;781:56;;893:26;;;-1:-1:-1;;893:26:0;;;995:5;964:36;;;;1129:11;;1110:30;;;:::i;:::-;1082:58;;1194:13;;1175:16;;:32;;;;:::i;:::-;1147:60;;1214:32;;;-1:-1:-1;;1252:41:0;;;327:11557;;;;;;;;;;;;14:128:9;;85:1;81:6;78:1;75:13;72:2;;;91:18;;:::i;:::-;-1:-1:-1;127:9:9;;62:80::o;147:168::-;;253:1;249;245:6;241:14;238:1;235:21;230:1;223:9;216:17;212:45;209:2;;;260:18;;:::i;:::-;-1:-1:-1;300:9:9;;199:116::o;320:127::-;381:10;376:3;372:20;369:1;362:31;412:4;409:1;402:15;436:4;433:1;426:15;352:95;327:11557:0;;;;;;",
  "deployedSourceMap": "327:11557:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2267:93;;;;;;:::i;:::-;;:::i;:::-;;1828:50;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9244:1418::-;;;:::i;378:27::-;;;:::i;573:29::-;;;:::i;1340:36::-;;;;;;:::i;:::-;;:::i;3473:158::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1592:48::-;;;;;;:::i;:::-;;:::i;1214:32::-;;;:::i;3637:958::-;;;;;;:::i;:::-;;:::i;4601:1000::-;;;;;;:::i;:::-;;:::i;2810:103::-;;;:::i;1382:45::-;;;;;;:::i;:::-;;:::i;1434:43::-;;;;;;:::i;:::-;;:::i;1082:58::-;;;:::i;2565:120::-;;;;;;:::i;:::-;;:::i;539:28::-;;;:::i;2365:97::-;;;;;;:::i;:::-;;:::i;454:52::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;964:36::-;;;:::i;608:27::-;;;:::i;1646:39::-;;;;;;:::i;:::-;;:::i;893:26::-;;;:::i;1147:60::-;;;:::i;781:56::-;;;:::i;11163:263::-;;;;;;:::i;:::-;;:::i;2467:93::-;;;;;;:::i;:::-;;:::i;1252:41::-;;;:::i;2691:113::-;;;;;;:::i;:::-;;:::i;680:44::-;;;;:::o;2267:93::-;2327:11;:26;2267:93::o;1828:50::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1828:50:0;;:::o;9244:1418::-;9585:11;;9566:16;9738:19;9585:11;9738:6;:19::i;:::-;9718:39;;9951:17;9971:16;:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;10004:34;;-1:-1:-1;;;;;;10004:34:0;-1:-1:-1;;;;;9971:23:0;;;10004:34;;;;;;;-1:-1:-1;;;10048:49:0;;9971:23;-1:-1:-1;10048:14:0;;:23;;:49;;10072:10;;10084:12;;10048:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10115:10:0;10129:1;10108:18;;;:6;:18;;;;;;:22;;;;10181:37;;;;;10186:12;;10181:37;:::i;:::-;;;;;;;;9244:1418;;;:::o;378:27::-;;;-1:-1:-1;;;;;378:27:0;;:::o;573:29::-;;;;:::o;1340:36::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1340:36:0;;-1:-1:-1;1340:36:0;:::o;3473:158::-;3551:4;3595:8;3567:16;3584:7;3567:25;;;;;;:::i;:::-;;;;;;;;;;;;;;:36;;-1:-1:-1;;;;;3567:36:0;;;;-1:-1:-1;;;;;;3567:36:0;;;;;;;;;-1:-1:-1;3567:36:0;3473:158;;;;:::o;1592:48::-;;;;;;;;;;;;-1:-1:-1;;;;;1592:48:0;;:::o;1214:32::-;;;;;;:::o;3637:958::-;3814:17;3834:16;3851:7;3834:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3906:34;;-1:-1:-1;;;;;;3906:34:0;-1:-1:-1;;;;;3834:25:0;;;3906:34;;;;;;;-1:-1:-1;;;4423:48:0;;3834:25;-1:-1:-1;3885:10:0;;4423:14;;;:27;;:48;;3885:10;;4458:3;;4463:7;;4423:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3637:958;;;;;:::o;4601:1000::-;5046:17;5066:16;5083:7;5066:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5101:34;;-1:-1:-1;;;;;;5101:34:0;-1:-1:-1;;;;;5066:25:0;;;5101:34;;;;;;-1:-1:-1;;;5177:39:0;;5066:25;;-1:-1:-1;5066:25:0;;5177:14;;;:24;;:39;;5210:4;;5177:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5227:14;;:71;;-1:-1:-1;;;5227:71:0;;5154:62;;-1:-1:-1;;;;;;5227:14:0;;:27;;:71;;5255:10;;5275:4;;5282:15;;5227:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5317:19:0;5339:14;;:39;;-1:-1:-1;;;5339:39:0;;-1:-1:-1;;;;;5339:14:0;;;;:24;;:39;;5372:4;;5339:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5317:61;-1:-1:-1;5411:33:0;5429:15;5411;:33;:::i;:::-;5393:14;:51;5389:119;;;5467:10;5460:18;;;;:6;:18;;;;;:37;;5482:15;;5460:18;:37;;5482:15;;5460:37;:::i;:::-;;;;-1:-1:-1;;5389:119:0;4601:1000;;;;;:::o;2810:103::-;2853:6;;;;2849:58;;;2862:6;:14;;-1:-1:-1;;2862:14:0;;;2849:58;;;2892:6;:13;;-1:-1:-1;;2892:13:0;2901:4;2892:13;;;2849:58;2810:103::o;1382:45::-;;;;;;;;;;;;1434:43;;;;;;;;;;;;;;;:::o;1082:58::-;;;;:::o;2565:120::-;2657:20;:15;2675:2;2657:20;:::i;:::-;2640:12;;:38;;;;:::i;:::-;2625:12;:53;-1:-1:-1;2565:120:0:o;539:28::-;;;;:::o;2365:97::-;2427:12;:28;2365:97::o;454:52::-;;;;;;;;;;;;;;;:::o;964:36::-;;;;:::o;608:27::-;;;;:::o;1646:39::-;;;;;;;;;;;;;:::o;893:26::-;;;;;;:::o;1147:60::-;;;;:::o;781:56::-;;;;:::o;11163:263::-;11217:4;11252:11;;11237;:26;11233:103;;-1:-1:-1;11323:2:0;11316:9;;11233:103;-1:-1:-1;11416:2:0;11163:263;;;;:::o;2467:93::-;2527:11;:26;2467:93::o;1252:41::-;;;;;;;;;:::o;2691:113::-;2761:16;:36;2691:113::o;14:175:9:-;84:20;;-1:-1:-1;;;;;133:31:9;;123:42;;113:2;;179:1;176;169:12;194:713;;292:3;285:4;277:6;273:17;269:27;259:2;;314:5;307;300:20;259:2;354:6;341:20;380:18;417:2;413;410:10;407:2;;;423:18;;:::i;:::-;472:2;466:9;541:2;522:13;;-1:-1:-1;;518:27:9;506:40;;548:4;502:51;568:18;;;588:22;;;565:46;562:2;;;614:18;;:::i;:::-;650:2;643:22;674:18;;;711:15;;;728:4;707:26;704:35;-1:-1:-1;701:2:9;;;756:5;749;742:20;701:2;824;817:4;809:6;805:17;798:4;790:6;786:17;773:54;847:15;;;864:4;843:26;836:41;;;;851:6;249:658;-1:-1:-1;;;249:658:9:o;912:198::-;;1024:2;1012:9;1003:7;999:23;995:32;992:2;;;1045:6;1037;1030:22;992:2;1073:31;1094:9;1073:31;:::i;:::-;1063:41;982:128;-1:-1:-1;;;982:128:9:o;1115:297::-;;1235:2;1223:9;1214:7;1210:23;1206:32;1203:2;;;1256:6;1248;1241:22;1203:2;1293:9;1287:16;1346:5;1339:13;1332:21;1325:5;1322:32;1312:2;;1373:6;1365;1358:22;1417:344;;1539:2;1527:9;1518:7;1514:23;1510:32;1507:2;;;1560:6;1552;1545:22;1507:2;1605:9;1592:23;1638:18;1630:6;1627:30;1624:2;;;1675:6;1667;1660:22;1624:2;1703:52;1747:7;1738:6;1727:9;1723:22;1703:52;:::i;:::-;1693:62;1497:264;-1:-1:-1;;;;1497:264:9:o;1766:420::-;;;1905:2;1893:9;1884:7;1880:23;1876:32;1873:2;;;1926:6;1918;1911:22;1873:2;1971:9;1958:23;2004:18;1996:6;1993:30;1990:2;;;2041:6;2033;2026:22;1990:2;2069:52;2113:7;2104:6;2093:9;2089:22;2069:52;:::i;:::-;2059:62;;;2140:40;2176:2;2165:9;2161:18;2140:40;:::i;:::-;2130:50;;1863:323;;;;;:::o;2191:488::-;;;;2347:2;2335:9;2326:7;2322:23;2318:32;2315:2;;;2368:6;2360;2353:22;2315:2;2413:9;2400:23;2446:18;2438:6;2435:30;2432:2;;;2483:6;2475;2468:22;2432:2;2511:52;2555:7;2546:6;2535:9;2531:22;2511:52;:::i;:::-;2501:62;;;2582:40;2618:2;2607:9;2603:18;2582:40;:::i;:::-;2572:50;;2669:2;2658:9;2654:18;2641:32;2631:42;;2305:374;;;;;:::o;2684:412::-;;;2823:2;2811:9;2802:7;2798:23;2794:32;2791:2;;;2844:6;2836;2829:22;2791:2;2889:9;2876:23;2922:18;2914:6;2911:30;2908:2;;;2959:6;2951;2944:22;2908:2;2987:52;3031:7;3022:6;3011:9;3007:22;2987:52;:::i;:::-;2977:62;3086:2;3071:18;;;;3058:32;;-1:-1:-1;;;;2781:315:9:o;3101:190::-;;3213:2;3201:9;3192:7;3188:23;3184:32;3181:2;;;3234:6;3226;3219:22;3181:2;-1:-1:-1;3262:23:9;;3171:120;-1:-1:-1;3171:120:9:o;3296:194::-;;3419:2;3407:9;3398:7;3394:23;3390:32;3387:2;;;3440:6;3432;3425:22;3387:2;-1:-1:-1;3468:16:9;;3377:113;-1:-1:-1;3377:113:9:o;3495:432::-;;3664:6;3658:13;3689:3;3701:129;3715:6;3712:1;3709:13;3701:129;;;3813:4;3797:14;;;3793:25;;3787:32;3774:11;;;3767:53;3730:12;3701:129;;;3848:6;3845:1;3842:13;3839:2;;;3883:3;3874:6;3869:3;3865:16;3858:29;3839:2;-1:-1:-1;3905:16:9;;;;;3634:293;-1:-1:-1;;3634:293:9:o;3932:253::-;-1:-1:-1;;;4134:18:9;;4177:1;4168:11;;4124:61::o;4190:203::-;-1:-1:-1;;;;;4354:32:9;;;;4336:51;;4324:2;4309:18;;4291:102::o;4622:375::-;-1:-1:-1;;;;;4880:15:9;;;4862:34;;4932:15;;;;4927:2;4912:18;;4905:43;4979:2;4964:18;;4957:34;;;;4812:2;4797:18;;4779:218::o;5002:274::-;-1:-1:-1;;;;;5194:32:9;;;;5176:51;;5258:2;5243:18;;5236:34;5164:2;5149:18;;5131:145::o;5281:187::-;5446:14;;5439:22;5421:41;;5409:2;5394:18;;5376:92::o;5695:342::-;5841:2;5826:18;;5874:1;5863:13;;5853:2;;5919:10;5914:3;5910:20;5907:1;5900:31;5954:4;5951:1;5944:15;5982:4;5979:1;5972:15;5853:2;6006:25;;;5808:229;:::o;6042:177::-;6188:25;;;6176:2;6161:18;;6143:76::o;6224:411::-;6436:25;;;6497:2;6492;6477:18;;6470:30;;;6536:2;6516:18;;;6509:30;-1:-1:-1;;;6570:2:9;6555:18;;6548:45;6625:3;6610:19;;6426:209::o;6640:128::-;;6711:1;6707:6;6704:1;6701:13;6698:2;;;6717:18;;:::i;:::-;-1:-1:-1;6753:9:9;;6688:80::o;6773:168::-;;6879:1;6875;6871:6;6867:14;6864:1;6861:21;6856:1;6849:9;6842:17;6838:45;6835:2;;;6886:18;;:::i;:::-;-1:-1:-1;6926:9:9;;6825:116::o;6946:127::-;7007:10;7002:3;6998:20;6995:1;6988:31;7038:4;7035:1;7028:15;7062:4;7059:1;7052:15;7078:127;7139:10;7134:3;7130:20;7127:1;7120:31;7170:4;7167:1;7160:15;7194:4;7191:1;7184:15",
  "source": "/*\nMarex SmartContract\n\nSPDX-License-Identifier: MIT\n*/\npragma solidity >=0.8.0;\n\n// import \"./finance/OptionsExchange.sol\";\n// import \"./deployment/ManagedContract.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n\n\n// contract Marex is ManagedContract {\ncontract Marex {\n    using SafeMath for uint;\n\n    ERC20 public ERC20Interface;\n\n    enum addressType{INVESTOR, LIQUIDITY}\n    mapping (address => addressType) public providerType;\n\n    // payoutRatio de 10%\n    uint public payoutRatio = 10;\n    uint public initialPrice = 30;\n    uint public strikePrice = 0;\n\n    // Active le contract aujourd'hui\n    uint public activationDate = block.timestamp;\n    // Date de maturité à aujourd'hui + 1 minute\n    uint public maturityDate = ( activationDate + 3 minutes);\n    // Bolean to activate/deactivate the contract\n    bool public locked = false;\n\n    // Liquidité maximum du provider\n    uint public maximumLiquidity = 10000;\n    // Liquidité maximum du sender à payoutRatio * liquidité du provider\n    uint public maximumSender = maximumLiquidity * payoutRatio;\n\n    uint public maximumPayout = maximumLiquidity + maximumSender;\n\n    bool public investorLock = false;\n    bool public liquidityProviderLock = false;\n\n    // @TODO ajout/Retrait de whitelist\n    address[] public whitelistedInvestor;\n    address[] public whitelistedLiquidityProvider;\n\n    mapping (address => bool) public senderList;\n    // mapping address => fond\n    uint _totalHolders; // you should initialize this to 0 in the constructor\n    mapping (uint => address payable) public holders;\n    mapping (address => uint) public shares;\n\n    /**\n    * @dev list of all supported tokens for transfer\n    *  string token symbol\n    *  address contract address of token\n    */\n    mapping(string => address) public authorizedTokens;\n\n\n    event Test(uint event_int);\n    event Fric(uint event_int, string event_string);\n    event Log(address event_string);\n    event LogS(string event_string);\n    event MaturityEnd(uint event_uint, uint event_block);\n\n/*\n    function initialize(Deployer deployer) override internal {\n        // exchange = OptionsExchange(deployer.getContractAddress(\"OptionsExchange\"));\n    }\n*/\n\n    function setPayoutRatio(uint payout_ratio) public {\n        payoutRatio = payout_ratio;\n    }\n    function setInitialPrice(uint initial_price) public {\n        initialPrice = initial_price;\n    }\n    function setStrikePrice(uint strike_price) public {\n        strikePrice = strike_price;\n    }\n    function addMaturity(uint maturity_minute) public {\n        maturityDate = maturityDate + ( maturity_minute * 60);\n    }\n\n    function setMaximumLiquidity(uint maximum_liquidity) public {\n        maximumLiquidity = maximum_liquidity;\n    }\n\n    function switchLock() public {\n        if (locked) {locked = false;}\n        else{locked = true;}\n    }\n\n\n/*\n    function approve(string memory symbol_, address address_, uint value) public {\n        address contract_ = authorizedTokens[symbol_];\n        ERC20Interface =  ERC20(contract_);\n        ERC20Interface.approve(address_, value);\n        // ERC20Interface.approve(address(0xCD50Fcc572DB2Cf8056aa76Cb0b26812696E353c), value);\n        //ee.approve(address(exchange), msg.value);\n        emit Log(address(contract_));\n    }\n*/\n    /**\n    * @dev add address of token to list of supported tokens using\n    * token symbol as identifier in mapping\n    */\n    function addNewToken(string memory symbol_, address address_) public returns (bool) {\n        authorizedTokens[symbol_] = address_;\n        return true;\n    }\n\n    function transferTokens(string memory symbol_, address to_, uint256 amount_) public {\n        //require(tokens[symbol_] != address(0));\n        //require(amount_ > 0);\n\n        address contract_ = authorizedTokens[symbol_];\n        address from_ = msg.sender;\n\n        ERC20Interface =  ERC20(contract_);\n\n     /*   transactions.push(\n            Transfer({\n            contract_:  contract_,\n            to_: to_,\n            amount_: amount_,\n            failed_: true\n            })\n        );\n        uint256 transactionId = transactions.length;\n        transactionIndexesToSender[from_].push(transactionId - 1);\n\n        if(amount_ > ERC20Interface.allowance(from_, address(this))) {\n            emit TransferFailed(from_, to_, amount_);\n            revert();\n        }\n*/\n        ERC20Interface.transferFrom(from_, to_, amount_);\n\n        //transactions[transactionId - 1].failed_ = false;\n\n        //emit TransferSuccessful(from_, to_, amount_);\n    }\n\n    function addLiquidity(string memory symbol_, uint liquidityAmount) public {\n        // require(shares[msg.sender] + msg.value <= maximumsender, \"You can't send that much money\");\n        // require(whitelistedLiquidityProvider[msg.sender], \"You are not authorized to deposit);\n        // require(msg.value > 3, \"You can't send that much money\");\n        // Test if we reach maximumLiquidity\n\n\n        // WhiteList des liquidityProvider\n\n        address contract_ = authorizedTokens[symbol_];\n        ERC20Interface =  ERC20(contract_);\n        \n        uint previousBalance = ERC20Interface.balanceOf(address(this));\n\n        ERC20Interface.transferFrom(msg.sender, address(this), liquidityAmount);\n        \n        uint currentBalance = ERC20Interface.balanceOf(address(this));\n\n        if (currentBalance == previousBalance + liquidityAmount) {\n            shares[msg.sender] += liquidityAmount;\n        }\n\n        // Emit that an liquidity provider sent money\n        //emit Test(msg.value);\n    }\n\n    function addCollateral(string memory symbol_, uint collateralAmount) public {\n        // require(shares[msg.sender] + msg.value <= maximumsender, \"You can't send that much money\");\n        // require(whitelistedLiquidityProvider[msg.sender], \"You are not authorized to deposit);\n        // require(msg.value > 3, \"You can't send that much money\");\n        // Test if we reach maximumLiquidity\n\n\n        address contract_ = authorizedTokens[symbol_];\n        ERC20Interface =  ERC20(contract_);\n        \n        uint previousBalance = ERC20Interface.balanceOf(address(this));\n\n        ERC20Interface.transferFrom(msg.sender, address(this), collateralAmount);\n        \n        uint currentBalance = ERC20Interface.balanceOf(address(this));\n\n        if (currentBalance == previousBalance + collateralAmount) {\n            shares[msg.sender] += collateralAmount;\n        }\n\n        // Emit that an liquidity provider sent money\n        //emit Test(msg.value);\n    }\n/*\n    function associateLiquidity(string memory symbol_) public payable {\n        // require(shares[msg.sender] + msg.value <= maximumsender, \"You can't send that much money\");\n        // require(whitelistedLiquidityProvider[msg.sender], \"You are not authorized to deposit);\n        // require(msg.value > 3, \"You can't send that much money\");\n        // Test if we reach maximumLiquidity\n        shares[msg.sender] += msg.value;\n        address contract_ = authorizedTokens[symbol_];\n        ERC20Interface =  ERC20(contract_);\n        ERC20Interface.transfer(address(this), msg.value);\n        // exchange.depositTokens(address(this), address(ERC20Interface), msg.value);\n       /* \n        require(!liquidityProviderLock, \"This contract is locked for funds\");\n        if (shares[msg.sender] + msg.value > maximumLiquidity) {\n            if (msg.value >= (maximumSender - shares[msg.sender])) {\n                shares[msg.sender] += (maximumLiquidity = shares[msg.sender]);\n                msg.sender.transfer(maximumLiquidity = shares[msg.sender]);\n                liquidityProviderLock = true;\n            }\n        }else{\n            shares[msg.sender] += msg.value;\n        }\n        if(!senderList[msg.sender]) {\n            holders[_totalHolders] = msg.sender;\n            providerType[msg.sender] = addressType.LIQUIDITY;\n            senderList[msg.sender] = true;\n            _totalHolders++;\n        }*/\n        // Emit that an liquidity provider sent money\n        //emit Test(msg.value);\n    //}\n    /*\n    function associateAddress() public payable {\n        // require(shares[msg.sender] + msg.value <= maximumsender, \"You can't send that much money\");\n        // require(whitelistedInvestor[msg.sender], \"You are not authorized to deposit);\n        // require(msg.value > 3, \"You can't send that much money\");\n        // Test if we reach maximumsender\n        require(!investorLock, \"This contract is locked for funds\");\n        if (shares[msg.sender] + msg.value > maximumSender) {\n            if (msg.value >= (maximumSender - shares[msg.sender])) {\n                shares[msg.sender] += (maximumSender = shares[msg.sender]);\n                payable(msg.sender).transfer(maximumSender = shares[msg.sender]);\n                investorLock = true;\n            }\n        }else{\n            shares[msg.sender] += msg.value;\n        }\n        if(!senderList[msg.sender]) {\n            holders[_totalHolders] = payable(msg.sender);\n            providerType[msg.sender] = addressType.INVESTOR;\n            senderList[msg.sender] = true;\n            _totalHolders++;\n        }\n        // Emit that an investors sent money\n        emit Test(msg.value);\n    }\n*/\n    function settle() public {\n        // Check maturity requirements\n        // require(block.timestamp >= maturityDate, \"This is not the right time\");\n        // require(shares[msg.sender] > 0, \"Participant balance is 0\");\n        // require(!locked, \"This Contract is still locked\");\n\n        // Check oracle price\n        uint oraclePrice = strikePrice;\n\n        // Compute payout function ratio on all shares\n        // uint participantShares = shares[msg.sender];\n        uint settleAmount = payout(oraclePrice);\n\n        // Check if sum of all balances is okay compared to fund locked in the contract\n        // and be sure that debt are cleansed and balance ajusted\n\n        // Send back payout\n        address contract_ = authorizedTokens[\"TST\"];\n        ERC20Interface =  ERC20(contract_);\n        ERC20Interface.transfer(msg.sender, settleAmount);\n\n        shares[msg.sender] = 0;\n        \n        // Emit the event \n        emit Fric(settleAmount, \"Send money back\");\n\n\n        /*\n        // Use the PayoutRatio Function\n        if (settleAmount > 0) {\n            shares[msg.sender] -= settleAmount;\n            if(senderList[msg.sender]) {\n                holders[_totalHolders] = address(0);\n                senderList[msg.sender] = false;\n                _totalHolders--;\n            }\n        }\n        msg.sender.transfer(settleAmount);\n\n        */\n        // exchange.withdrawTokens(settleAmount);\n    }\n\n    /*\n    function withdraw() public returns (bool) {\n        // It is important to set this to zero because the recipient\n        // can call this function again as part of the receiving call\n        // before `send` returns.\n        pendingReturns[msg.sender] = 0;\n\n        if (!msg.sender.send(amount)) {\n            // No need to call throw here, just reset the amount owing\n            pendingReturns[msg.sender] = amount;\n            return false;\n        }\n        return true;\n    }*/\n\n    function payout(uint oraclePrice) public view returns(uint) {\n        if (oraclePrice >= strikePrice) {\n            // return maximumPayout;\n            return 20;\n        }\n        // return (maximumPayout * oraclePrice / initialPrice);\n        return 80;\n\n    }\n/*\n    function maturityEnd() public {\n        // Conditions\n\n        require(block.timestamp >= maturityDate, \"Maturity not yet ended.\");\n        require(!locked, \"Maturity has already been called.\");\n\n        locked = true;\n        emit MaturityEnd(strikePrice, block.timestamp);\n\n        uint _shares;\n        for(uint i = 0 ; i<_totalHolders; i++) {\n            _shares = shares[holders[i]];\n            holders[i].transfer(_shares);\n        }\n    }*/\n}\n",
  "sourcePath": "/home/rems/block/lol/contracts/Marex.sol",
  "ast": {
    "absolutePath": "/home/rems/block/lol/contracts/Marex.sol",
    "exportedSymbols": {
      "Context": [
        1988
      ],
      "ERC20": [
        1862
      ],
      "IERC20": [
        1940
      ],
      "IERC20Metadata": [
        1965
      ],
      "Marex": [
        428
      ],
      "SafeMath": [
        2300
      ]
    },
    "id": 429,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:24:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 2301,
        "src": "171:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 1863,
        "src": "229:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 428,
        "linearizedBaseContracts": [
          428
        ],
        "name": "Marex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6,
            "libraryName": {
              "id": 4,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2300,
              "src": "354:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "348:24:0",
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "367:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "1bbc4b83",
            "id": 9,
            "mutability": "mutable",
            "name": "ERC20Interface",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "378:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1862",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1862,
                "src": "378:5:0"
              },
              "referencedDeclaration": 1862,
              "src": "378:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1862",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Marex.addressType",
            "id": 12,
            "members": [
              {
                "id": 10,
                "name": "INVESTOR",
                "nodeType": "EnumValue",
                "src": "429:8:0"
              },
              {
                "id": 11,
                "name": "LIQUIDITY",
                "nodeType": "EnumValue",
                "src": "439:9:0"
              }
            ],
            "name": "addressType",
            "nodeType": "EnumDefinition",
            "src": "412:37:0"
          },
          {
            "constant": false,
            "functionSelector": "a59b2de6",
            "id": 17,
            "mutability": "mutable",
            "name": "providerType",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "454:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_addressType_$12_$",
              "typeString": "mapping(address => enum Marex.addressType)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "454:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_addressType_$12_$",
                "typeString": "mapping(address => enum Marex.addressType)"
              },
              "valueType": {
                "id": 15,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14,
                  "name": "addressType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "474:11:0"
                },
                "referencedDeclaration": 12,
                "src": "474:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_addressType_$12",
                  "typeString": "enum Marex.addressType"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d4e13da",
            "id": 20,
            "mutability": "mutable",
            "name": "payoutRatio",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "539:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "539:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "565:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1d0806ae",
            "id": 23,
            "mutability": "mutable",
            "name": "initialPrice",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "573:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "573:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "600:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c52987cf",
            "id": 26,
            "mutability": "mutable",
            "name": "strikePrice",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "608:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "608:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "634:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0403aa3b",
            "id": 30,
            "mutability": "mutable",
            "name": "activationDate",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "680:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "680:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 28,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967292,
                "src": "709:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "709:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d59624b4",
            "id": 36,
            "mutability": "mutable",
            "name": "maturityDate",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "781:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "781:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "components": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "id": 32,
                    "name": "activationDate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "810:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "+",
                  "rightExpression": {
                    "hexValue": "33",
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "827:9:0",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_180_by_1",
                      "typeString": "int_const 180"
                    },
                    "value": "3"
                  },
                  "src": "810:26:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "id": 35,
              "isConstant": false,
              "isInlineArray": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "808:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cf309012",
            "id": 39,
            "mutability": "mutable",
            "name": "locked",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "893:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 37,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "893:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "914:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "afd2a01c",
            "id": 42,
            "mutability": "mutable",
            "name": "maximumLiquidity",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "964:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "995:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "91c4101c",
            "id": 47,
            "mutability": "mutable",
            "name": "maximumSender",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1082:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1082:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "id": 44,
                "name": "maximumLiquidity",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42,
                "src": "1110:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "id": 45,
                "name": "payoutRatio",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 20,
                "src": "1129:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1110:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d27a5972",
            "id": 52,
            "mutability": "mutable",
            "name": "maximumPayout",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1147:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1147:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "id": 49,
                "name": "maximumLiquidity",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42,
                "src": "1175:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "id": 50,
                "name": "maximumSender",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 47,
                "src": "1194:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1175:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "309818f4",
            "id": 55,
            "mutability": "mutable",
            "name": "investorLock",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1214:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 53,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1214:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1241:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f10ff2de",
            "id": 58,
            "mutability": "mutable",
            "name": "liquidityProviderLock",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1252:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 56,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1252:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1288:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2010b1ed",
            "id": 61,
            "mutability": "mutable",
            "name": "whitelistedInvestor",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1340:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1340:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 60,
              "nodeType": "ArrayTypeName",
              "src": "1340:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89439c05",
            "id": 64,
            "mutability": "mutable",
            "name": "whitelistedLiquidityProvider",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1382:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1382:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 63,
              "nodeType": "ArrayTypeName",
              "src": "1382:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d3e5f2d",
            "id": 68,
            "mutability": "mutable",
            "name": "senderList",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1434:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1443:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1434:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 66,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1454:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "_totalHolders",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1514:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1514:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2a11ced0",
            "id": 74,
            "mutability": "mutable",
            "name": "holders",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1592:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_payable_$",
              "typeString": "mapping(uint256 => address payable)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1601:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1592:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_payable_$",
                "typeString": "mapping(uint256 => address payable)"
              },
              "valueType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1609:15:0",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ce7c2ac2",
            "id": 78,
            "mutability": "mutable",
            "name": "shares",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1646:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1655:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1646:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1666:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "1692:131:0",
              "text": " @dev list of all supported tokens for transfer\n  string token symbol\n  address contract address of token"
            },
            "functionSelector": "0ffe9d52",
            "id": 83,
            "mutability": "mutable",
            "name": "authorizedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1828:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 80,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1836:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1828:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1846:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 87,
            "name": "Test",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_int",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1897:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1896:16:0"
            },
            "src": "1886:27:0"
          },
          {
            "anonymous": false,
            "id": 93,
            "name": "Fric",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_int",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1929:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_string",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1945:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1928:37:0"
            },
            "src": "1918:48:0"
          },
          {
            "anonymous": false,
            "id": 97,
            "name": "Log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_string",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1981:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:22:0"
            },
            "src": "1971:32:0"
          },
          {
            "anonymous": false,
            "id": 101,
            "name": "LogS",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_string",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2019:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:21:0"
            },
            "src": "2008:32:0"
          },
          {
            "anonymous": false,
            "id": 107,
            "name": "MaturityEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_uint",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2063:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_block",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2080:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:35:0"
            },
            "src": "2045:53:0"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "2317:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "payoutRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2327:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "payout_ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2341:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2327:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:26:0"
                }
              ]
            },
            "functionSelector": "0b098d85",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPayoutRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "payout_ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "2291:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2290:19:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2317:0:0"
            },
            "scope": 428,
            "src": "2267:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2417:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 122,
                      "name": "initialPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2427:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123,
                      "name": "initial_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "2442:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2427:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:28:0"
                }
              ]
            },
            "functionSelector": "9f4ba0ee",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInitialPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "initial_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2390:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:20:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2417:0:0"
            },
            "scope": 428,
            "src": "2365:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "2517:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2527:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "strike_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "2541:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2527:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:26:0"
                }
              ]
            },
            "functionSelector": "e488cd9f",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrikePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "strike_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2491:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2490:19:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:0:0"
            },
            "scope": 428,
            "src": "2467:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2615:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "maturityDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2625:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 143,
                        "name": "maturityDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2640:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 144,
                              "name": "maturity_minute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2657:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2675:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "2657:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 147,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2655:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2640:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2625:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2625:53:0"
                }
              ]
            },
            "functionSelector": "9c2d0664",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMaturity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "maturity_minute",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2586:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:22:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2615:0:0"
            },
            "scope": 428,
            "src": "2565:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2751:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "maximumLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2761:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "maximum_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2780:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2761:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:36:0"
                }
              ]
            },
            "functionSelector": "fc5cd246",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMaximumLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "maximum_liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2720:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:24:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2751:0:0"
            },
            "scope": 428,
            "src": "2691:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2839:74:0",
              "statements": [
                {
                  "condition": {
                    "id": 165,
                    "name": "locked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39,
                    "src": "2853:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "2891:16:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 171,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2892:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2901:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2892:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "2892:13:0"
                      }
                    ]
                  },
                  "id": 176,
                  "nodeType": "IfStatement",
                  "src": "2849:58:0",
                  "trueBody": {
                    "id": 170,
                    "nodeType": "Block",
                    "src": "2861:17:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 166,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2862:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2871:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2862:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "2862:14:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "62e9fa2c",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "switchLock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2829:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:0"
            },
            "scope": 428,
            "src": "2810:103:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "3557:74:0",
              "statements": [
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 188,
                        "name": "authorizedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "3567:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "id": 189,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3584:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3567:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 191,
                      "name": "address_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "3595:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3567:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:36:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3620:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 187,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "3613:11:0"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "3348:120:0",
              "text": " @dev add address of token to list of supported tokens using\n token symbol as identifier in mapping"
            },
            "functionSelector": "2740728e",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3494:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "address_",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3517:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3493:41:0"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3551:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3550:6:0"
            },
            "scope": 428,
            "src": "3473:158:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3721:874:0",
              "statements": [
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "3814:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3814:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "baseExpression": {
                      "id": 208,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "3834:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 210,
                    "indexExpression": {
                      "id": 209,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "3851:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3834:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3814:45:0"
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "from_",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "3869:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3869:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "expression": {
                      "id": 214,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3885:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3885:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3869:26:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3906:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 219,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "3930:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 218,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "3924:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3924:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3906:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 226,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4451:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 227,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "4458:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 228,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "4463:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 223,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4423:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1561,
                      "src": "4423:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4423:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "4423:48:0"
                }
              ]
            },
            "functionSelector": "432c919a",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3661:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "to_",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3684:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3697:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3660:53:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3721:0:0"
            },
            "scope": 428,
            "src": "3637:958:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4675:926:0",
              "statements": [
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5046:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5046:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "baseExpression": {
                      "id": 241,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "5066:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 243,
                    "indexExpression": {
                      "id": 242,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "5083:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5066:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5046:45:0"
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 245,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "5101:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 247,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "5125:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 246,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "5119:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5119:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "5101:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:34:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "previousBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5154:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5154:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 257,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5210:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5202:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5202:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5202:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 253,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5177:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "5177:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5154:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 264,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5255:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5255:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 268,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5275:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5267:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 266,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5267:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5267:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 270,
                        "name": "liquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "5282:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 261,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5227:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1561,
                      "src": "5227:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5227:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "5227:71:0"
                },
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5317:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5317:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 279,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5372:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5364:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5364:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5364:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 275,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5339:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "5339:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5339:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5317:61:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 283,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 274,
                      "src": "5393:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 284,
                        "name": "previousBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "5411:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 285,
                        "name": "liquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "5429:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5411:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5393:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 296,
                  "nodeType": "IfStatement",
                  "src": "5389:119:0",
                  "trueBody": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "5446:62:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 288,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "5460:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "expression": {
                                "id": 289,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5467:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5467:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5460:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 292,
                            "name": "liquidityAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "5482:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5460:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "5460:37:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "433ff288",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4623:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4623:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "liquidityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4646:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4646:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4622:45:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4675:0:0"
            },
            "scope": 428,
            "src": "4601:1000:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 363,
              "nodeType": "Block",
              "src": "5683:885:0",
              "statements": [
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 363,
                      "src": "6010:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6010:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "baseExpression": {
                      "id": 307,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "6030:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 309,
                    "indexExpression": {
                      "id": 308,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "6047:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6030:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6010:45:0"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 311,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "6065:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 313,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "6089:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 312,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "6083:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6083:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "6065:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "6065:34:0"
                },
                {
                  "assignments": [
                    318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "previousBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 363,
                      "src": "6118:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 326,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6174:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6166:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6166:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6166:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 319,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6141:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "6141:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6141:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6118:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 330,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6219:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6219:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 334,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6239:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6231:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 332,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6231:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6231:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 336,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6246:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 327,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6191:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1561,
                      "src": "6191:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6191:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "6191:72:0"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 363,
                      "src": "6282:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6282:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 348,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6337:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6329:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6329:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6329:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 341,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6304:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "6304:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6282:61:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 349,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "6358:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 350,
                        "name": "previousBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "6376:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 351,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6394:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6376:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6358:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 362,
                  "nodeType": "IfStatement",
                  "src": "6354:121:0",
                  "trueBody": {
                    "id": 361,
                    "nodeType": "Block",
                    "src": "6412:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 354,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "6426:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 357,
                            "indexExpression": {
                              "expression": {
                                "id": 355,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6433:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6433:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6426:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 358,
                            "name": "collateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "6448:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6426:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "6426:38:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8610404c",
            "id": 364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "5630:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5630:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "5653:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5653:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5629:46:0"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5683:0:0"
            },
            "scope": 428,
            "src": "5607:961:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "9269:1393:0",
              "statements": [
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "oraclePrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "9566:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9566:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "id": 369,
                    "name": "strikePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "9585:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9566:30:0"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "settleAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "9718:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9718:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 376,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 374,
                        "name": "oraclePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "9745:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 373,
                      "name": "payout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "9738:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9738:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9718:39:0"
                },
                {
                  "assignments": [
                    378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 378,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "9951:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 377,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9951:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 382,
                  "initialValue": {
                    "baseExpression": {
                      "id": 379,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "9971:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 381,
                    "indexExpression": {
                      "hexValue": "545354",
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9988:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                        "typeString": "literal_string \"TST\""
                      },
                      "value": "TST"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9971:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9951:43:0"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 383,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "10004:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 385,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "10028:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 384,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "10022:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10022:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "10004:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "10004:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10072:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10072:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 394,
                        "name": "settleAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "10084:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 389,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "10048:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1475,
                      "src": "10048:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10048:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "10048:49:0"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 397,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "10108:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "expression": {
                          "id": 398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10115:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10115:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10108:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10129:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10108:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "10108:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 405,
                        "name": "settleAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "10186:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e64206d6f6e6579206261636b",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10200:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce2867f715b095490f0ce03c5b061cb8f671277719e8b1ede616cc5a7a1e64d3",
                          "typeString": "literal_string \"Send money back\""
                        },
                        "value": "Send money back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce2867f715b095490f0ce03c5b061cb8f671277719e8b1ede616cc5a7a1e64d3",
                          "typeString": "literal_string \"Send money back\""
                        }
                      ],
                      "id": 404,
                      "name": "Fric",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "10181:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10181:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "EmitStatement",
                  "src": "10176:42:0"
                }
              ]
            },
            "functionSelector": "11da60b4",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9259:2:0"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9269:0:0"
            },
            "scope": 428,
            "src": "9244:1418:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "11223:203:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 417,
                      "name": "oraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "11237:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 418,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "11252:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11237:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 423,
                  "nodeType": "IfStatement",
                  "src": "11233:103:0",
                  "trueBody": {
                    "id": 422,
                    "nodeType": "Block",
                    "src": "11265:71:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3230",
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11323:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "functionReturnParameters": 416,
                        "id": 421,
                        "nodeType": "Return",
                        "src": "11316:9:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "3830",
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11416:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_80_by_1",
                      "typeString": "int_const 80"
                    },
                    "value": "80"
                  },
                  "functionReturnParameters": 416,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "11409:9:0"
                }
              ]
            },
            "functionSelector": "e1152343",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "oraclePrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "11179:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11179:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11178:18:0"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "11217:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11217:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11216:6:0"
            },
            "scope": 428,
            "src": "11163:263:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 429,
        "src": "327:11557:0"
      }
    ],
    "src": "56:11829:0"
  },
  "legacyAST": {
    "absolutePath": "/home/rems/block/lol/contracts/Marex.sol",
    "exportedSymbols": {
      "Context": [
        1988
      ],
      "ERC20": [
        1862
      ],
      "IERC20": [
        1940
      ],
      "IERC20Metadata": [
        1965
      ],
      "Marex": [
        428
      ],
      "SafeMath": [
        2300
      ]
    },
    "id": 429,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:24:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 2301,
        "src": "171:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 1863,
        "src": "229:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 428,
        "linearizedBaseContracts": [
          428
        ],
        "name": "Marex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6,
            "libraryName": {
              "id": 4,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2300,
              "src": "354:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "348:24:0",
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "367:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "1bbc4b83",
            "id": 9,
            "mutability": "mutable",
            "name": "ERC20Interface",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "378:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$1862",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1862,
                "src": "378:5:0"
              },
              "referencedDeclaration": 1862,
              "src": "378:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$1862",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Marex.addressType",
            "id": 12,
            "members": [
              {
                "id": 10,
                "name": "INVESTOR",
                "nodeType": "EnumValue",
                "src": "429:8:0"
              },
              {
                "id": 11,
                "name": "LIQUIDITY",
                "nodeType": "EnumValue",
                "src": "439:9:0"
              }
            ],
            "name": "addressType",
            "nodeType": "EnumDefinition",
            "src": "412:37:0"
          },
          {
            "constant": false,
            "functionSelector": "a59b2de6",
            "id": 17,
            "mutability": "mutable",
            "name": "providerType",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "454:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_enum$_addressType_$12_$",
              "typeString": "mapping(address => enum Marex.addressType)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "454:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_addressType_$12_$",
                "typeString": "mapping(address => enum Marex.addressType)"
              },
              "valueType": {
                "id": 15,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14,
                  "name": "addressType",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12,
                  "src": "474:11:0"
                },
                "referencedDeclaration": 12,
                "src": "474:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_addressType_$12",
                  "typeString": "enum Marex.addressType"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d4e13da",
            "id": 20,
            "mutability": "mutable",
            "name": "payoutRatio",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "539:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "539:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "565:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1d0806ae",
            "id": 23,
            "mutability": "mutable",
            "name": "initialPrice",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "573:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "573:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 22,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "600:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c52987cf",
            "id": 26,
            "mutability": "mutable",
            "name": "strikePrice",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "608:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "608:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "634:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0403aa3b",
            "id": 30,
            "mutability": "mutable",
            "name": "activationDate",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "680:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "680:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 28,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967292,
                "src": "709:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 29,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "709:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d59624b4",
            "id": 36,
            "mutability": "mutable",
            "name": "maturityDate",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "781:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "781:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "components": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 34,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "id": 32,
                    "name": "activationDate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "810:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "+",
                  "rightExpression": {
                    "hexValue": "33",
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "827:9:0",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_180_by_1",
                      "typeString": "int_const 180"
                    },
                    "value": "3"
                  },
                  "src": "810:26:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "id": 35,
              "isConstant": false,
              "isInlineArray": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "808:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cf309012",
            "id": 39,
            "mutability": "mutable",
            "name": "locked",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "893:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 37,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "893:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "914:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "afd2a01c",
            "id": 42,
            "mutability": "mutable",
            "name": "maximumLiquidity",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "964:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130303030",
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "995:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "91c4101c",
            "id": 47,
            "mutability": "mutable",
            "name": "maximumSender",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1082:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1082:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 46,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "id": 44,
                "name": "maximumLiquidity",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42,
                "src": "1110:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "id": 45,
                "name": "payoutRatio",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 20,
                "src": "1129:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1110:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d27a5972",
            "id": 52,
            "mutability": "mutable",
            "name": "maximumPayout",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1147:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1147:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 51,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "id": 49,
                "name": "maximumLiquidity",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42,
                "src": "1175:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "+",
              "rightExpression": {
                "id": 50,
                "name": "maximumSender",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 47,
                "src": "1194:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1175:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "309818f4",
            "id": 55,
            "mutability": "mutable",
            "name": "investorLock",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1214:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 53,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1214:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 54,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1241:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f10ff2de",
            "id": 58,
            "mutability": "mutable",
            "name": "liquidityProviderLock",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1252:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 56,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1252:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 57,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1288:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2010b1ed",
            "id": 61,
            "mutability": "mutable",
            "name": "whitelistedInvestor",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1340:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1340:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 60,
              "nodeType": "ArrayTypeName",
              "src": "1340:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "89439c05",
            "id": 64,
            "mutability": "mutable",
            "name": "whitelistedLiquidityProvider",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1382:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1382:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 63,
              "nodeType": "ArrayTypeName",
              "src": "1382:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d3e5f2d",
            "id": 68,
            "mutability": "mutable",
            "name": "senderList",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1434:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1443:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1434:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 66,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1454:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "mutability": "mutable",
            "name": "_totalHolders",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1514:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 69,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1514:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2a11ced0",
            "id": 74,
            "mutability": "mutable",
            "name": "holders",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1592:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_payable_$",
              "typeString": "mapping(uint256 => address payable)"
            },
            "typeName": {
              "id": 73,
              "keyType": {
                "id": 71,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1601:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1592:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_payable_$",
                "typeString": "mapping(uint256 => address payable)"
              },
              "valueType": {
                "id": 72,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1609:15:0",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ce7c2ac2",
            "id": 78,
            "mutability": "mutable",
            "name": "shares",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1646:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1655:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1646:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1666:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "1692:131:0",
              "text": " @dev list of all supported tokens for transfer\n  string token symbol\n  address contract address of token"
            },
            "functionSelector": "0ffe9d52",
            "id": 83,
            "mutability": "mutable",
            "name": "authorizedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "1828:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
              "typeString": "mapping(string => address)"
            },
            "typeName": {
              "id": 82,
              "keyType": {
                "id": 80,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1836:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "1828:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                "typeString": "mapping(string => address)"
              },
              "valueType": {
                "id": 81,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1846:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 87,
            "name": "Test",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_int",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "1897:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1896:16:0"
            },
            "src": "1886:27:0"
          },
          {
            "anonymous": false,
            "id": 93,
            "name": "Fric",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_int",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1929:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_string",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "1945:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1928:37:0"
            },
            "src": "1918:48:0"
          },
          {
            "anonymous": false,
            "id": 97,
            "name": "Log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_string",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1981:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1980:22:0"
            },
            "src": "1971:32:0"
          },
          {
            "anonymous": false,
            "id": 101,
            "name": "LogS",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_string",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "2019:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:21:0"
            },
            "src": "2008:32:0"
          },
          {
            "anonymous": false,
            "id": 107,
            "name": "MaturityEnd",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_uint",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2063:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "event_block",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "2080:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:35:0"
            },
            "src": "2045:53:0"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "2317:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "payoutRatio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2327:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "payout_ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 109,
                      "src": "2341:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2327:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:26:0"
                }
              ]
            },
            "functionSelector": "0b098d85",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPayoutRatio",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "mutability": "mutable",
                  "name": "payout_ratio",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "2291:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2290:19:0"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2317:0:0"
            },
            "scope": 428,
            "src": "2267:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "2417:45:0",
              "statements": [
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 122,
                      "name": "initialPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2427:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123,
                      "name": "initial_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "2442:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2427:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:28:0"
                }
              ]
            },
            "functionSelector": "9f4ba0ee",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInitialPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "initial_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2390:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:20:0"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2417:0:0"
            },
            "scope": 428,
            "src": "2365:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "2517:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 132,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2527:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 133,
                      "name": "strike_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "2541:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2527:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:26:0"
                }
              ]
            },
            "functionSelector": "e488cd9f",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrikePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "strike_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2491:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2490:19:0"
            },
            "returnParameters": {
              "id": 131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:0:0"
            },
            "scope": 428,
            "src": "2467:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2615:70:0",
              "statements": [
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "maturityDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2625:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 143,
                        "name": "maturityDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2640:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 144,
                              "name": "maturity_minute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "2657:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2675:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "2657:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 147,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2655:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2640:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2625:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2625:53:0"
                }
              ]
            },
            "functionSelector": "9c2d0664",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMaturity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "maturity_minute",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2586:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:22:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2615:0:0"
            },
            "scope": 428,
            "src": "2565:120:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2751:53:0",
              "statements": [
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "maximumLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2761:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "maximum_liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2780:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2761:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:36:0"
                }
              ]
            },
            "functionSelector": "fc5cd246",
            "id": 162,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMaximumLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "maximum_liquidity",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2720:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:24:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2751:0:0"
            },
            "scope": 428,
            "src": "2691:113:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2839:74:0",
              "statements": [
                {
                  "condition": {
                    "id": 165,
                    "name": "locked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39,
                    "src": "2853:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "2891:16:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 171,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2892:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2901:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2892:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "2892:13:0"
                      }
                    ]
                  },
                  "id": 176,
                  "nodeType": "IfStatement",
                  "src": "2849:58:0",
                  "trueBody": {
                    "id": 170,
                    "nodeType": "Block",
                    "src": "2861:17:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 166,
                            "name": "locked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39,
                            "src": "2862:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2871:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2862:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 169,
                        "nodeType": "ExpressionStatement",
                        "src": "2862:14:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "62e9fa2c",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "switchLock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2829:2:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:0"
            },
            "scope": 428,
            "src": "2810:103:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "3557:74:0",
              "statements": [
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 188,
                        "name": "authorizedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "3567:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                          "typeString": "mapping(string memory => address)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "id": 189,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3584:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3567:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 191,
                      "name": "address_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "3595:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3567:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:36:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3620:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 187,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "3613:11:0"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "3348:120:0",
              "text": " @dev add address of token to list of supported tokens using\n token symbol as identifier in mapping"
            },
            "functionSelector": "2740728e",
            "id": 197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3494:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "address_",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3517:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3493:41:0"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "3551:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3550:6:0"
            },
            "scope": 428,
            "src": "3473:158:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3721:874:0",
              "statements": [
                {
                  "assignments": [
                    207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "3814:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3814:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 211,
                  "initialValue": {
                    "baseExpression": {
                      "id": 208,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "3834:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 210,
                    "indexExpression": {
                      "id": 209,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "3851:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3834:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3814:45:0"
                },
                {
                  "assignments": [
                    213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "from_",
                      "nodeType": "VariableDeclaration",
                      "scope": 231,
                      "src": "3869:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3869:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "expression": {
                      "id": 214,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3885:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3885:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3869:26:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 217,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3906:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 219,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "3930:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 218,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "3924:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3924:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "3906:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3906:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 226,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "4451:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 227,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "4458:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 228,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "4463:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 223,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "4423:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1561,
                      "src": "4423:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4423:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "4423:48:0"
                }
              ]
            },
            "functionSelector": "432c919a",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3661:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "to_",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3684:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3697:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3660:53:0"
            },
            "returnParameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3721:0:0"
            },
            "scope": 428,
            "src": "3637:958:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4675:926:0",
              "statements": [
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5046:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5046:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "baseExpression": {
                      "id": 241,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "5066:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 243,
                    "indexExpression": {
                      "id": 242,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 234,
                      "src": "5083:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5066:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5046:45:0"
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 245,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "5101:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 247,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 240,
                          "src": "5125:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 246,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "5119:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5119:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "5101:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "5101:34:0"
                },
                {
                  "assignments": [
                    252
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "previousBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5154:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5154:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 257,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5210:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5202:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5202:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5202:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 253,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5177:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "5177:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5154:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 264,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5255:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5255:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 268,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5275:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5267:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 266,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5267:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5267:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 270,
                        "name": "liquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "5282:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 261,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5227:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1561,
                      "src": "5227:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5227:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 272,
                  "nodeType": "ExpressionStatement",
                  "src": "5227:71:0"
                },
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "5317:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5317:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 279,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5372:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5364:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5364:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5364:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 275,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "5339:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "5339:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5339:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5317:61:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 283,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 274,
                      "src": "5393:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 284,
                        "name": "previousBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "5411:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 285,
                        "name": "liquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 236,
                        "src": "5429:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5411:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5393:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 296,
                  "nodeType": "IfStatement",
                  "src": "5389:119:0",
                  "trueBody": {
                    "id": 295,
                    "nodeType": "Block",
                    "src": "5446:62:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 288,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "5460:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 291,
                            "indexExpression": {
                              "expression": {
                                "id": 289,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5467:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5467:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5460:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 292,
                            "name": "liquidityAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "5482:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5460:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 294,
                        "nodeType": "ExpressionStatement",
                        "src": "5460:37:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "433ff288",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4623:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4623:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 236,
                  "mutability": "mutable",
                  "name": "liquidityAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 298,
                  "src": "4646:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 235,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4646:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4622:45:0"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4675:0:0"
            },
            "scope": 428,
            "src": "4601:1000:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 363,
              "nodeType": "Block",
              "src": "5683:885:0",
              "statements": [
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 363,
                      "src": "6010:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6010:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 310,
                  "initialValue": {
                    "baseExpression": {
                      "id": 307,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "6030:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 309,
                    "indexExpression": {
                      "id": 308,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "6047:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6030:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6010:45:0"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 311,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "6065:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 313,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "6089:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 312,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "6083:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6083:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "6065:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "6065:34:0"
                },
                {
                  "assignments": [
                    318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 318,
                      "mutability": "mutable",
                      "name": "previousBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 363,
                      "src": "6118:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 326,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6174:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6166:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6166:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6166:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 319,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6141:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "6141:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6141:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6118:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 330,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6219:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6219:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 334,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6239:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6231:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 332,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6231:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6231:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 336,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6246:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 327,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6191:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1561,
                      "src": "6191:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6191:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 338,
                  "nodeType": "ExpressionStatement",
                  "src": "6191:72:0"
                },
                {
                  "assignments": [
                    340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 363,
                      "src": "6282:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6282:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 348,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6337:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Marex_$428",
                              "typeString": "contract Marex"
                            }
                          ],
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6329:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6329:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6329:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 341,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "6304:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1454,
                      "src": "6304:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6304:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6282:61:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 349,
                      "name": "currentBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "6358:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 350,
                        "name": "previousBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "6376:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 351,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "6394:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6376:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6358:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 362,
                  "nodeType": "IfStatement",
                  "src": "6354:121:0",
                  "trueBody": {
                    "id": 361,
                    "nodeType": "Block",
                    "src": "6412:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 354,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78,
                              "src": "6426:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 357,
                            "indexExpression": {
                              "expression": {
                                "id": 355,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6433:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6433:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6426:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 358,
                            "name": "collateralAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "6448:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6426:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "6426:38:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8610404c",
            "id": 364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "5630:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5630:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 364,
                  "src": "5653:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5653:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5629:46:0"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5683:0:0"
            },
            "scope": 428,
            "src": "5607:961:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "9269:1393:0",
              "statements": [
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "oraclePrice",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "9566:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9566:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 370,
                  "initialValue": {
                    "id": 369,
                    "name": "strikePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 26,
                    "src": "9585:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9566:30:0"
                },
                {
                  "assignments": [
                    372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "settleAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "9718:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9718:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 376,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 374,
                        "name": "oraclePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "9745:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 373,
                      "name": "payout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 427,
                      "src": "9738:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9738:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9718:39:0"
                },
                {
                  "assignments": [
                    378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 378,
                      "mutability": "mutable",
                      "name": "contract_",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "9951:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 377,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9951:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 382,
                  "initialValue": {
                    "baseExpression": {
                      "id": 379,
                      "name": "authorizedTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "9971:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 381,
                    "indexExpression": {
                      "hexValue": "545354",
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9988:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                        "typeString": "literal_string \"TST\""
                      },
                      "value": "TST"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9971:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9951:43:0"
                },
                {
                  "expression": {
                    "id": 387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 383,
                      "name": "ERC20Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "10004:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 385,
                          "name": "contract_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "10028:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 384,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1862,
                        "src": "10022:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$1862_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10022:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1862",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "10004:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1862",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 388,
                  "nodeType": "ExpressionStatement",
                  "src": "10004:34:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 392,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10072:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10072:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 394,
                        "name": "settleAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "10084:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 389,
                        "name": "ERC20Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "10048:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1862",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1475,
                      "src": "10048:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10048:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "10048:49:0"
                },
                {
                  "expression": {
                    "id": 402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 397,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "10108:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 400,
                      "indexExpression": {
                        "expression": {
                          "id": 398,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10115:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10115:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10108:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10129:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10108:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 403,
                  "nodeType": "ExpressionStatement",
                  "src": "10108:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 405,
                        "name": "settleAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "10186:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e64206d6f6e6579206261636b",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10200:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce2867f715b095490f0ce03c5b061cb8f671277719e8b1ede616cc5a7a1e64d3",
                          "typeString": "literal_string \"Send money back\""
                        },
                        "value": "Send money back"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce2867f715b095490f0ce03c5b061cb8f671277719e8b1ede616cc5a7a1e64d3",
                          "typeString": "literal_string \"Send money back\""
                        }
                      ],
                      "id": 404,
                      "name": "Fric",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "10181:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10181:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "EmitStatement",
                  "src": "10176:42:0"
                }
              ]
            },
            "functionSelector": "11da60b4",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9259:2:0"
            },
            "returnParameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9269:0:0"
            },
            "scope": 428,
            "src": "9244:1418:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "11223:203:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 417,
                      "name": "oraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 412,
                      "src": "11237:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 418,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "11252:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11237:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 423,
                  "nodeType": "IfStatement",
                  "src": "11233:103:0",
                  "trueBody": {
                    "id": 422,
                    "nodeType": "Block",
                    "src": "11265:71:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3230",
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11323:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "functionReturnParameters": 416,
                        "id": 421,
                        "nodeType": "Return",
                        "src": "11316:9:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "3830",
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11416:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_80_by_1",
                      "typeString": "int_const 80"
                    },
                    "value": "80"
                  },
                  "functionReturnParameters": 416,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "11409:9:0"
                }
              ]
            },
            "functionSelector": "e1152343",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payout",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "oraclePrice",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "11179:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11179:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11178:18:0"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "11217:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11217:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11216:6:0"
            },
            "scope": 428,
            "src": "11163:263:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 429,
        "src": "327:11557:0"
      }
    ],
    "src": "56:11829:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xdbD06Bf1dECb959dBC22aCE107B1Ff0a0906F5db",
      "transactionHash": "0x9a4c18fffde04382931cbb3d5e806c2f178ae95d34352155e014d09fba79a0de"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-24T19:03:24.968Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addNewToken(string,address)": {
        "details": "add address of token to list of supported tokens using token symbol as identifier in mapping"
      }
    },
    "stateVariables": {
      "authorizedTokens": {
        "details": "list of all supported tokens for transfer  string token symbol  address contract address of token"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}