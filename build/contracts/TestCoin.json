{
  "contractName": "TestCoin",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/rems/block/lol/contracts/finance/TestCoin.sol\":\"TestCoin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/rems/block/lol/contracts/finance/TestCoin.sol\":{\"keccak256\":\"0xe3d9c94ccb7a628c2991c5ef434b2de780ba8ad74a5a61fc6d4f497dcbef4246\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb70a4169e033c4e148335dd168edad43e24d1930402bdda4d4723669e324868\",\"dweb:/ipfs/QmSCNz7aCxErCs2i2dJ2dK7Ebw4bE2EJAFRLRc5h8Yxhez\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051806040016040528060088152602001672a32b9ba21b7b4b760c11b815250604051806040016040528060038152602001621514d560ea1b81525081600390805190602001906200006792919062000173565b5080516200007d90600490602084019062000173565b50505062000094336101f46200009a60201b60201c565b620002bb565b6001600160a01b038216620000cc5760405162461bcd60e51b8152600401620000c39062000219565b60405180910390fd5b620000da600083836200016e565b8060026000828254620000ee919062000259565b90915550506001600160a01b038216600090815260208190526040812080548392906200011d90849062000259565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200016290859062000250565b60405180910390a35050565b505050565b82805462000181906200027e565b90600052602060002090601f016020900481019282620001a55760008555620001f0565b82601f10620001c057805160ff1916838001178555620001f0565b82800160010185558215620001f0579182015b82811115620001f0578251825591602001919060010190620001d3565b50620001fe92915062000202565b5090565b5b80821115620001fe576000815560010162000203565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200027957634e487b7160e01b81526011600452602481fd5b500190565b6002810460018216806200029357607f821691505b60208210811415620002b557634e487b7160e01b600052602260045260246000fd5b50919050565b610b0580620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014757806370a082311461015c57806395d89b411461016f578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101b0565b6040516100ce91906107cd565b60405180910390f35b6100ea6100e5366004610799565b610242565b6040516100ce91906107c2565b6100ff61025f565b6040516100ce9190610a38565b6100ea61011a36600461075e565b610265565b610127610305565b6040516100ce9190610a41565b6100ea610142366004610799565b61030a565b61015a610155366004610799565b610359565b005b6100ff61016a36600461070b565b610367565b6100c1610386565b6100ea610185366004610799565b610395565b6100ea610198366004610799565b610410565b6100ff6101ab36600461072c565b610424565b6060600380546101bf90610a7e565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610a7e565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061025661024f61044f565b8484610453565b50600192915050565b60025490565b6000610272848484610507565b6001600160a01b03841660009081526001602052604081208161029361044f565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102df5760405162461bcd60e51b81526004016102d6906108eb565b60405180910390fd5b6102fa856102eb61044f565b6102f58685610a67565b610453565b506001949350505050565b600090565b600061025661031761044f565b84846001600061032561044f565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546102f59190610a4f565b610363828261062f565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610a7e565b600080600160006103a461044f565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103f05760405162461bcd60e51b81526004016102d6906109bc565b6104066103fb61044f565b856102f58685610a67565b5060019392505050565b600061025661041d61044f565b8484610507565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104795760405162461bcd60e51b81526004016102d690610978565b6001600160a01b03821661049f5760405162461bcd60e51b81526004016102d690610863565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104fa908590610a38565b60405180910390a3505050565b6001600160a01b03831661052d5760405162461bcd60e51b81526004016102d690610933565b6001600160a01b0382166105535760405162461bcd60e51b81526004016102d690610820565b61055e8383836106ef565b6001600160a01b038316600090815260208190526040902054818110156105975760405162461bcd60e51b81526004016102d6906108a5565b6105a18282610a67565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906105d7908490610a4f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106219190610a38565b60405180910390a350505050565b6001600160a01b0382166106555760405162461bcd60e51b81526004016102d690610a01565b610661600083836106ef565b80600260008282546106739190610a4f565b90915550506001600160a01b038216600090815260208190526040812080548392906106a0908490610a4f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106e3908590610a38565b60405180910390a35050565b505050565b80356001600160a01b038116811461038157600080fd5b60006020828403121561071c578081fd5b610725826106f4565b9392505050565b6000806040838503121561073e578081fd5b610747836106f4565b9150610755602084016106f4565b90509250929050565b600080600060608486031215610772578081fd5b61077b846106f4565b9250610789602085016106f4565b9150604084013590509250925092565b600080604083850312156107ab578182fd5b6107b4836106f4565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156107f9578581018301518582016040015282016107dd565b8181111561080a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610a6257610a62610ab9565b500190565b600082821015610a7957610a79610ab9565b500390565b600281046001821680610a9257607f821691505b60208210811415610ab357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122060866fcf1706eb71204439f9929b8894916ade09d7fda83736a290be866cde4364736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014757806370a082311461015c57806395d89b411461016f578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100f757806323b872dd1461010c578063313ce5671461011f5780633950935114610134575b600080fd5b6100c16101b0565b6040516100ce91906107cd565b60405180910390f35b6100ea6100e5366004610799565b610242565b6040516100ce91906107c2565b6100ff61025f565b6040516100ce9190610a38565b6100ea61011a36600461075e565b610265565b610127610305565b6040516100ce9190610a41565b6100ea610142366004610799565b61030a565b61015a610155366004610799565b610359565b005b6100ff61016a36600461070b565b610367565b6100c1610386565b6100ea610185366004610799565b610395565b6100ea610198366004610799565b610410565b6100ff6101ab36600461072c565b610424565b6060600380546101bf90610a7e565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610a7e565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b5050505050905090565b600061025661024f61044f565b8484610453565b50600192915050565b60025490565b6000610272848484610507565b6001600160a01b03841660009081526001602052604081208161029361044f565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102df5760405162461bcd60e51b81526004016102d6906108eb565b60405180910390fd5b6102fa856102eb61044f565b6102f58685610a67565b610453565b506001949350505050565b600090565b600061025661031761044f565b84846001600061032561044f565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546102f59190610a4f565b610363828261062f565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b6060600480546101bf90610a7e565b600080600160006103a461044f565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103f05760405162461bcd60e51b81526004016102d6906109bc565b6104066103fb61044f565b856102f58685610a67565b5060019392505050565b600061025661041d61044f565b8484610507565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104795760405162461bcd60e51b81526004016102d690610978565b6001600160a01b03821661049f5760405162461bcd60e51b81526004016102d690610863565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104fa908590610a38565b60405180910390a3505050565b6001600160a01b03831661052d5760405162461bcd60e51b81526004016102d690610933565b6001600160a01b0382166105535760405162461bcd60e51b81526004016102d690610820565b61055e8383836106ef565b6001600160a01b038316600090815260208190526040902054818110156105975760405162461bcd60e51b81526004016102d6906108a5565b6105a18282610a67565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906105d7908490610a4f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106219190610a38565b60405180910390a350505050565b6001600160a01b0382166106555760405162461bcd60e51b81526004016102d690610a01565b610661600083836106ef565b80600260008282546106739190610a4f565b90915550506001600160a01b038216600090815260208190526040812080548392906106a0908490610a4f565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106e3908590610a38565b60405180910390a35050565b505050565b80356001600160a01b038116811461038157600080fd5b60006020828403121561071c578081fd5b610725826106f4565b9392505050565b6000806040838503121561073e578081fd5b610747836106f4565b9150610755602084016106f4565b90509250929050565b600080600060608486031215610772578081fd5b61077b846106f4565b9250610789602085016106f4565b9150604084013590509250925092565b600080604083850312156107ab578182fd5b6107b4836106f4565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b818110156107f9578581018301518582016040015282016107dd565b8181111561080a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610a6257610a62610ab9565b500190565b600082821015610a7957610a79610ab9565b500390565b600281046001821680610a9257607f821691505b60208210811415610ab357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122060866fcf1706eb71204439f9929b8894916ade09d7fda83736a290be866cde4364736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1172:13",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:13",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:181:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:13",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:33:13",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:61:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:61:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "337:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "360:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "345:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "337:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:13",
                "type": ""
              }
            ],
            "src": "14:355:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:76:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "485:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "497:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "508:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "485:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "527:9:13"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "538:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "520:25:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "520:25:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "444:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "455:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "466:4:13",
                "type": ""
              }
            ],
            "src": "374:177:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:181:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "639:115:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "660:3:13"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "669:3:13",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "674:10:13",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "665:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "665:20:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "653:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "653:33:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "653:33:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:13",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "709:4:13",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "699:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "699:15:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "699:15:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "734:3:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "739:4:13",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "727:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "727:17:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "727:17:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "620:1:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "627:1:13"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "623:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "623:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "617:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:13:13"
                  },
                  "nodeType": "YulIf",
                  "src": "614:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "763:16:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "774:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "777:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "770:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "763:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "587:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "590:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "596:3:13",
                "type": ""
              }
            ],
            "src": "556:229:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "845:325:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "855:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "869:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "875:1:13",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "865:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "865:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "855:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "886:38:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "916:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "922:1:13",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "912:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:12:13"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "890:18:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "963:31:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "965:27:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "979:6:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "987:4:13",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "975:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:17:13"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "965:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "943:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "936:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:26:13"
                  },
                  "nodeType": "YulIf",
                  "src": "933:2:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1053:111:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1074:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1081:3:13",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1086:10:13",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1077:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1077:20:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1067:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1067:31:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1067:31:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1118:1:13",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1121:4:13",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1111:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1111:15:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1111:15:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1146:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1149:4:13",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1139:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1139:15:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1139:15:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1009:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1032:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1040:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1029:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1029:14:13"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1006:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1006:38:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1003:2:13"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "825:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "834:6:13",
                "type": ""
              }
            ],
            "src": "790:380:13"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6442:13",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:13",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:13"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:13"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "167:16:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "176:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "179:1:13",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "169:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "169:12:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "169:12:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:13"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "152:3:13",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "157:1:13",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "148:3:13"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "148:11:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "161:1:13",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "144:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "144:19:13"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:31:13"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:42:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:50:13"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:13"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:13",
                "type": ""
              }
            ],
            "src": "14:175:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "264:128:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "310:26:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "319:6:13"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "327:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "312:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "312:22:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "312:22:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "285:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "294:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "281:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "281:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "306:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "274:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "345:41:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "376:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "355:20:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:31:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "230:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "241:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "253:6:13",
                "type": ""
              }
            ],
            "src": "194:198:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:187:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "530:26:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "539:6:13"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "547:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "532:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "532:22:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "532:22:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "505:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "514:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "501:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "526:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "497:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "494:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "565:41:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "596:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "575:20:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:31:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "565:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "615:50:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "661:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "646:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "646:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "625:20:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:40:13"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "615:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "453:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "465:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "473:6:13",
                "type": ""
              }
            ],
            "src": "397:274:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "780:238:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:26:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:13"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "843:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "828:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "828:22:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "828:22:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "801:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "822:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "793:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "793:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "790:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "861:41:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "892:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "871:20:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:31:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "861:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "911:50:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "921:20:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:40:13"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "911:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "970:42:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1008:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "993:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "993:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "980:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:13"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "730:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "741:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "753:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "761:6:13",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "769:6:13",
                "type": ""
              }
            ],
            "src": "676:342:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:179:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1156:26:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1165:6:13"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1173:6:13"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1158:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1158:22:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1158:22:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1131:7:13"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1140:9:13"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1127:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:23:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1123:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:32:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1120:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1191:41:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1222:9:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1201:20:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:31:13"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1191:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1241:42:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1268:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1279:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1251:12:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:32:13"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1241:6:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1068:9:13",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1079:7:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1091:6:13",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1099:6:13",
                "type": ""
              }
            ],
            "src": "1023:266:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1389:92:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1399:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1411:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1407:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1399:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1441:9:13"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1466:6:13"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1459:6:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:14:13"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1452:6:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1452:22:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1434:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1434:41:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1434:41:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1358:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1369:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1380:4:13",
                "type": ""
              }
            ],
            "src": "1294:187:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1607:482:13",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1617:12:13",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1627:2:13",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1621:2:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1645:9:13"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1656:2:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1638:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1638:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1638:21:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1668:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1688:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1682:5:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1682:13:13"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1672:6:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1715:9:13"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1726:2:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1711:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1711:18:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1731:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1704:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1704:34:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1704:34:13"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1747:13:13",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "1756:4:13"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1751:1:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1819:90:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1848:9:13"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1859:1:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1844:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1844:17:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1863:2:13",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1840:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1840:26:13"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1882:6:13"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1890:1:13"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1878:3:13"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1878:14:13"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1894:2:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1874:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1874:23:13"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1868:5:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1868:30:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1833:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1833:66:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1833:66:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1780:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1783:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1777:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1777:13:13"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1791:19:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1793:15:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1802:1:13"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1805:2:13"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1798:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1798:10:13"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1793:1:13"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1773:3:13",
                    "statements": []
                  },
                  "src": "1769:140:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1943:69:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1972:9:13"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1983:6:13"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1968:3:13"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1968:22:13"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1992:2:13",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1964:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1964:31:13"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1997:4:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1957:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1957:45:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1957:45:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1924:1:13"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1927:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1921:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1921:13:13"
                  },
                  "nodeType": "YulIf",
                  "src": "1918:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2021:62:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2037:9:13"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2056:6:13"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2064:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2052:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2052:15:13"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2073:2:13",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2069:3:13"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2069:7:13"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2048:3:13"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2048:29:13"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2033:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:45:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2080:2:13",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2021:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1576:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1587:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1598:4:13",
                "type": ""
              }
            ],
            "src": "1486:603:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2268:225:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2285:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2296:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2278:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2319:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2330:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2315:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2315:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2335:2:13",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2308:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2308:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2308:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2358:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2369:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2354:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2354:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2374:34:13",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2347:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2347:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2347:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2429:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2440:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2425:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2445:5:13",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2418:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2418:33:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2418:33:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2460:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2472:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2483:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2468:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2468:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2460:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2245:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2259:4:13",
                "type": ""
              }
            ],
            "src": "2094:399:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2672:224:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2689:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2700:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2682:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2682:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2723:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2734:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2719:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2719:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2739:2:13",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2712:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2712:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2712:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2762:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2773:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2758:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2758:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2778:34:13",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2751:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2751:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2751:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2849:4:13",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2822:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:32:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2822:32:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2863:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2875:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2886:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2871:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2871:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2863:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2649:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2663:4:13",
                "type": ""
              }
            ],
            "src": "2498:398:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3075:228:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3092:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3103:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3085:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3126:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3137:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3122:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3122:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3142:2:13",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3115:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3115:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3115:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3165:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3176:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3161:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3161:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3181:34:13",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3154:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3154:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3154:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3236:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3247:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3232:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3232:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3252:8:13",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3225:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:36:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3225:36:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3270:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3282:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3293:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3278:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3278:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3270:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3052:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3066:4:13",
                "type": ""
              }
            ],
            "src": "2901:402:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3482:230:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3499:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3510:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3492:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3533:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3544:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3529:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3529:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3549:2:13",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3522:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3522:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3522:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3572:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3583:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3568:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3568:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3588:34:13",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3561:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3561:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3561:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3643:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3654:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3639:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3639:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3659:10:13",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3632:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3632:38:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3632:38:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3679:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3691:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3702:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3687:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3687:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3679:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3459:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3473:4:13",
                "type": ""
              }
            ],
            "src": "3308:404:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3891:227:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3908:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3919:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3901:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3901:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3901:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3942:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3953:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3938:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3938:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3958:2:13",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3931:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3931:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3931:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3981:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3992:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3977:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3977:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3997:34:13",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3970:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3970:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3970:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4052:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4063:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4048:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4048:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4068:7:13",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4041:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4041:35:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4041:35:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4085:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4097:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4108:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4093:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4093:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4085:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3868:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3882:4:13",
                "type": ""
              }
            ],
            "src": "3717:401:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4297:226:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4314:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4325:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4307:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4307:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4307:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4348:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4359:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4344:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4344:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4364:2:13",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4337:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4337:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4337:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4387:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4398:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4383:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4383:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4403:34:13",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4376:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4376:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4376:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4458:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4469:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4454:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4454:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4474:6:13",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4447:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4447:34:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4447:34:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4490:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4502:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4513:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4498:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4498:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4490:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4274:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4288:4:13",
                "type": ""
              }
            ],
            "src": "4123:400:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4702:227:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4719:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4730:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4712:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4712:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4712:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4753:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4764:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4749:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4749:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4769:2:13",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4742:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4742:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4742:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4792:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4803:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4788:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4788:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4808:34:13",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4781:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4781:62:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4781:62:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4863:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4874:2:13",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4859:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4859:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4879:7:13",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4852:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4852:35:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4852:35:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4896:27:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4908:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4919:3:13",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4904:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4904:19:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4896:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4679:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4693:4:13",
                "type": ""
              }
            ],
            "src": "4528:401:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5108:181:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5125:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5136:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5118:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5118:21:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5118:21:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5159:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5170:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5155:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5155:18:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5175:2:13",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5148:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5148:30:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5148:30:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5198:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5209:2:13",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5194:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5194:18:13"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5214:33:13",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5187:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5187:61:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5187:61:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5257:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5269:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5280:2:13",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5265:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5265:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5257:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5085:9:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5099:4:13",
                "type": ""
              }
            ],
            "src": "4934:355:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5395:76:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5405:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5417:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5428:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5413:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5413:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5405:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5447:9:13"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5458:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5440:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5440:25:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5440:25:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5364:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5375:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5386:4:13",
                "type": ""
              }
            ],
            "src": "5294:177:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5573:87:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5583:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5595:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5606:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5591:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5591:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5583:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5625:9:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5640:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5648:4:13",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5636:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5636:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5618:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5618:36:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5618:36:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5542:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5553:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5564:4:13",
                "type": ""
              }
            ],
            "src": "5476:184:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5713:80:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5740:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5742:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5742:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5742:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5729:1:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5736:1:13"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5732:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5732:6:13"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5726:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5726:13:13"
                  },
                  "nodeType": "YulIf",
                  "src": "5723:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5771:16:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5782:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5785:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5778:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5778:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5771:3:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5696:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5699:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5705:3:13",
                "type": ""
              }
            ],
            "src": "5665:128:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5847:76:13",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5869:22:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5871:16:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5871:18:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5871:18:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5863:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5866:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5860:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5860:8:13"
                  },
                  "nodeType": "YulIf",
                  "src": "5857:2:13"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5900:17:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5912:1:13"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5915:1:13"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5908:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5908:9:13"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5900:4:13"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5829:1:13",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5832:1:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5838:4:13",
                "type": ""
              }
            ],
            "src": "5798:125:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5983:325:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5993:22:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6007:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6013:1:13",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6003:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6003:12:13"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5993:6:13"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6024:38:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6054:4:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6060:1:13",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6050:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6050:12:13"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6028:18:13",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6101:31:13",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6103:27:13",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6117:6:13"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6125:4:13",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6113:3:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6113:17:13"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6103:6:13"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6081:18:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6074:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6074:26:13"
                  },
                  "nodeType": "YulIf",
                  "src": "6071:2:13"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6191:111:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6212:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6219:3:13",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6224:10:13",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6215:3:13"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6215:20:13"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6205:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6205:31:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6205:31:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6256:1:13",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6259:4:13",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6249:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6249:15:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6249:15:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6284:1:13",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6287:4:13",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6277:6:13"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6277:15:13"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6277:15:13"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6147:18:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6170:6:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6178:2:13",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6167:2:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6167:14:13"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6144:2:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6144:38:13"
                  },
                  "nodeType": "YulIf",
                  "src": "6141:2:13"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5963:4:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5972:6:13",
                "type": ""
              }
            ],
            "src": "5928:380:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6345:95:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6362:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6369:3:13",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6374:10:13",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6365:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6365:20:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6355:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6355:31:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6355:31:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6402:1:13",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6405:4:13",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6395:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6395:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6395:15:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6426:1:13",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6429:4:13",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6419:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6419:15:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6419:15:13"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6313:127:13"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "310:311:4:-:0;;;343:77;;;;;;;;;;1898:114:6;;;;;;;;;;;;;-1:-1:-1;;;1898:114:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1898:114:6;;;1973:5;1965;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:17:6;;;;:7;;:17;;;;;:::i;:::-;;1898:114;;391:22:4::1;397:10;409:3;391:5;;;:22;;:::i;:::-;310:311:::0;;8023:330:6;-1:-1:-1;;;;;8106:21:6;;8098:65;;;;-1:-1:-1;;;8098:65:6;;;;;;;:::i;:::-;;;;;;;;;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:6;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:6;;-1:-1:-1;;;;;8309:37:6;;;8326:1;;8309:37;;;;8339:6;;8309:37;:::i;:::-;;;;;;;;8023:330;;:::o;10506:92::-;;;;:::o;310:311:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;310:311:4;;;-1:-1:-1;310:311:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:355:13;216:2;198:21;;;255:2;235:18;;;228:30;294:33;289:2;274:18;;267:61;360:2;345:18;;188:181::o;374:177::-;520:25;;;508:2;493:18;;475:76::o;556:229::-;;627:1;623:6;620:1;617:13;614:2;;;-1:-1:-1;;;653:33:13;;709:4;706:1;699:15;739:4;660:3;727:17;614:2;-1:-1:-1;770:9:13;;604:181::o;790:380::-;875:1;865:12;;922:1;912:12;;;933:2;;987:4;979:6;975:17;965:27;;933:2;1040;1032:6;1029:14;1009:18;1006:38;1003:2;;;1086:10;1081:3;1077:20;1074:1;1067:31;1121:4;1118:1;1111:15;1149:4;1146:1;1139:15;1003:2;;845:325;;;:::o;:::-;310:311:4;;;;;;",
  "deployedSourceMap": "310:311:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3165:106::-;;;:::i;:::-;;;;;;;:::i;4807:414::-;;;;;;:::i;:::-;;:::i;528:90:4:-;;;:::i;:::-;;;;;;;:::i;5616:212:6:-;;;;;;:::i;:::-;;:::i;425:98:4:-;;;;;;:::i;:::-;;:::i;:::-;;3329:125:6;;;;;;:::i;:::-;;:::i;2288:102::-;;;:::i;6315:371::-;;;;;;:::i;:::-;;:::i;3657:172::-;;;;;;:::i;:::-;;:::i;3887:149::-;;;;;;:::i;:::-;;:::i;2077:98::-;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;4282:12;:10;:12::i;:::-;4296:7;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:6;4174:166;;;;:::o;3165:106::-;3252:12;;3165:106;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:6;;4976:24;5003:19;;;:11;:19;;;;;4976:24;5023:12;:10;:12::i;:::-;-1:-1:-1;;;;;5003:33:6;-1:-1:-1;;;;;5003:33:6;;;;;;;;;;;;;4976:60;;5074:6;5054:16;:26;;5046:79;;;;-1:-1:-1;;;5046:79:6;;;;;;;:::i;:::-;;;;;;;;;5135:57;5144:6;5152:12;:10;:12::i;:::-;5166:25;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;-1:-1:-1;5210:4:6;;4807:414;-1:-1:-1;;;;4807:414:6:o;528:90:4:-;586:5;528:90;:::o;5616:212:6:-;5704:4;5720:80;5729:12;:10;:12::i;:::-;5743:7;5789:10;5752:11;:25;5764:12;:10;:12::i;:::-;-1:-1:-1;;;;;5752:25:6;;;;;;;;;;;;;;;;;-1:-1:-1;5752:25:6;;;:34;;;;;;;;;;:47;;;;:::i;425:98:4:-;496:21;502:7;510:6;496:5;:21::i;:::-;425:98;;:::o;3329:125:6:-;-1:-1:-1;;;;;3429:18:6;;3403:7;3429:18;;;;;;;;;;;3329:125;;;;:::o;2288:102::-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;6408:4;6424:24;6451:11;:25;6463:12;:10;:12::i;:::-;-1:-1:-1;;;;;6451:25:6;;;;;;;;;;;;;;;;;-1:-1:-1;6451:25:6;;;:34;;;;;;;;;;;-1:-1:-1;6503:35:6;;;;6495:85;;;;-1:-1:-1;;;6495:85:6;;;;;;;:::i;:::-;6590:67;6599:12;:10;:12::i;:::-;6613:7;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:6;;6315:371;-1:-1:-1;;;6315:371:6:o;3657:172::-;3743:4;3759:42;3769:12;:10;:12::i;:::-;3783:9;3794:6;3759:9;:42::i;3887:149::-;-1:-1:-1;;;;;4002:18:6;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149::o;586:96:11:-;665:10;586:96;:::o;9579:340:6:-;-1:-1:-1;;;;;9680:19:6;;9672:68;;;;-1:-1:-1;;;9672:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;9758:21:6;;9750:68;;;;-1:-1:-1;;;9750:68:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;9829:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9880:32;;;;;9859:6;;9880:32;:::i;:::-;;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:6;;7257:70;;;;-1:-1:-1;;;7257:70:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;7345:23:6;;7337:71;;;;-1:-1:-1;;;7337:71:6;;;;;;;:::i;:::-;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;-1:-1:-1;;;;;7501:17:6;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;7528:74:6;;;;;;;:::i;:::-;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:6;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:6;7719:6;-1:-1:-1;;;;;7710:35:6;;7738:6;7710:35;;;;;;:::i;:::-;;;;;;;;7160:592;;;;:::o;8023:330::-;-1:-1:-1;;;;;8106:21:6;;8098:65;;;;-1:-1:-1;;;8098:65:6;;;;;;;:::i;:::-;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:6;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:6;;-1:-1:-1;;;;;8309:37:6;;;8326:1;;8309:37;;;;8339:6;;8309:37;:::i;:::-;;;;;;;;8023:330;;:::o;10506:92::-;;;;:::o;14:175:13:-;84:20;;-1:-1:-1;;;;;133:31:13;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;:::-;345:41;264:128;-1:-1:-1;;;264:128:13:o;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:266::-;;;1152:2;1140:9;1131:7;1127:23;1123:32;1120:2;;;1173:6;1165;1158:22;1120:2;1201:31;1222:9;1201:31;:::i;:::-;1191:41;1279:2;1264:18;;;;1251:32;;-1:-1:-1;;;1110:179:13:o;1294:187::-;1459:14;;1452:22;1434:41;;1422:2;1407:18;;1389:92::o;1486:603::-;;1627:2;1656;1645:9;1638:21;1688:6;1682:13;1731:6;1726:2;1715:9;1711:18;1704:34;1756:4;1769:140;1783:6;1780:1;1777:13;1769:140;;;1878:14;;;1874:23;;1868:30;1844:17;;;1863:2;1840:26;1833:66;1798:10;;1769:140;;;1927:6;1924:1;1921:13;1918:2;;;1997:4;1992:2;1983:6;1972:9;1968:22;1964:31;1957:45;1918:2;-1:-1:-1;2073:2:13;2052:15;-1:-1:-1;;2048:29:13;2033:45;;;;2080:2;2029:54;;1607:482;-1:-1:-1;;;1607:482:13:o;2094:399::-;2296:2;2278:21;;;2335:2;2315:18;;;2308:30;2374:34;2369:2;2354:18;;2347:62;-1:-1:-1;;;2440:2:13;2425:18;;2418:33;2483:3;2468:19;;2268:225::o;2498:398::-;2700:2;2682:21;;;2739:2;2719:18;;;2712:30;2778:34;2773:2;2758:18;;2751:62;-1:-1:-1;;;2844:2:13;2829:18;;2822:32;2886:3;2871:19;;2672:224::o;2901:402::-;3103:2;3085:21;;;3142:2;3122:18;;;3115:30;3181:34;3176:2;3161:18;;3154:62;-1:-1:-1;;;3247:2:13;3232:18;;3225:36;3293:3;3278:19;;3075:228::o;3308:404::-;3510:2;3492:21;;;3549:2;3529:18;;;3522:30;3588:34;3583:2;3568:18;;3561:62;-1:-1:-1;;;3654:2:13;3639:18;;3632:38;3702:3;3687:19;;3482:230::o;3717:401::-;3919:2;3901:21;;;3958:2;3938:18;;;3931:30;3997:34;3992:2;3977:18;;3970:62;-1:-1:-1;;;4063:2:13;4048:18;;4041:35;4108:3;4093:19;;3891:227::o;4123:400::-;4325:2;4307:21;;;4364:2;4344:18;;;4337:30;4403:34;4398:2;4383:18;;4376:62;-1:-1:-1;;;4469:2:13;4454:18;;4447:34;4513:3;4498:19;;4297:226::o;4528:401::-;4730:2;4712:21;;;4769:2;4749:18;;;4742:30;4808:34;4803:2;4788:18;;4781:62;-1:-1:-1;;;4874:2:13;4859:18;;4852:35;4919:3;4904:19;;4702:227::o;4934:355::-;5136:2;5118:21;;;5175:2;5155:18;;;5148:30;5214:33;5209:2;5194:18;;5187:61;5280:2;5265:18;;5108:181::o;5294:177::-;5440:25;;;5428:2;5413:18;;5395:76::o;5476:184::-;5648:4;5636:17;;;;5618:36;;5606:2;5591:18;;5573:87::o;5665:128::-;;5736:1;5732:6;5729:1;5726:13;5723:2;;;5742:18;;:::i;:::-;-1:-1:-1;5778:9:13;;5713:80::o;5798:125::-;;5866:1;5863;5860:8;5857:2;;;5871:18;;:::i;:::-;-1:-1:-1;5908:9:13;;5847:76::o;5928:380::-;6013:1;6003:12;;6060:1;6050:12;;;6071:2;;6125:4;6117:6;6113:17;6103:27;;6071:2;6178;6170:6;6167:14;6147:18;6144:38;6141:2;;;6224:10;6219:3;6215:20;6212:1;6205:31;6259:4;6256:1;6249:15;6287:4;6284:1;6277:15;6141:2;;5983:325;;;:::o;6313:127::-;6374:10;6369:3;6365:20;6362:1;6355:31;6405:4;6402:1;6395:15;6429:4;6426:1;6419:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.8.0;\n\n// import \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n// import \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestCoin is ERC20 {\n    constructor() ERC20(\"TestCoin\", \"TST\"){\n        _mint(msg.sender, 500);\n    }\n\n   function mint(address account, uint256 amount) public virtual {\n       _mint(account,amount);\n   }\n\n   function decimals() public view virtual override returns (uint8) {\n        return 0;\n    }\n\n}\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\n\n/* \n// contract TestCoin is Context, IERC20, IERC20Metadata {\n//     mapping (address => uint256) private _balances;\n\n//     mapping (address => mapping (address => uint256)) private _allowances;\n\n//     uint256 private _totalSupply;\n\n//     string private _name = \"Test Coin\";\n//     string private _symbol = \"TST\";\n\n//     address oo = 0xE88CF5D67b9a20946784020065fcCc3bCbae4Eb9;\n//     address pp = 0x16966082DA219f930d660C304d98a0Edb3781FF6;\n\n//     /**\n//      * @dev Sets the values for {name} and {symbol}.\n//      *\n//      * The default value of {decimals} is 18. To select a different value for\n//      * {decimals} you should overload it.\n//      *\n//      * All two of these values are immutable: they can only be set once during\n//      * construction.\n//      */\n     \n//     // constructor (string memory name_, string memory symbol_) {\n//     constructor () {\n//      //   _mint(oo, 50000);\n//        // _mint(pp, 50000);\n//     }\n\n//     /**\n//      * @dev Returns the name of the token.\n//      */\n//     function name() public view virtual override returns (string memory) {\n//         return _name;\n//     }\n\n//     /**\n//      * @dev Returns the symbol of the token, usually a shorter version of the\n//      * name.\n//      */\n//     function symbol() public view virtual override returns (string memory) {\n//         return _symbol;\n//     }\n\n//     /**\n//      * @dev Returns the number of decimals used to get its user representation.\n//      * For example, if `decimals` equals `2`, a balance of `505` tokens should\n//      * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n//      *\n//      * Tokens usually opt for a value of 18, imitating the relationship between\n//      * Ether and Wei. This is the value {ERC20} uses, unless this function is\n//      * overridden;\n//      *\n//      * NOTE: This information is only used for _display_ purposes: it in\n//      * no way affects any of the arithmetic of the contract, including\n//      * {IERC20-balanceOf} and {IERC20-transfer}.\n//      */\n//     function decimals() public view virtual override returns (uint8) {\n//         return 2;\n//     }\n\n//     /**\n//      * @dev See {IERC20-totalSupply}.\n//      */\n//     function totalSupply() public view virtual override returns (uint256) {\n//         return _totalSupply;\n//     }\n\n//     /**\n//      * @dev See {IERC20-balanceOf}.\n//      */\n//     function balanceOf(address account) public view virtual override returns (uint256) {\n//         return _balances[account];\n//     }\n\n//     /**\n//      * @dev See {IERC20-transfer}.\n//      *\n//      * Requirements:\n//      *\n//      * - `recipient` cannot be the zero address.\n//      * - the caller must have a balance of at least `amount`.\n//      */\n//     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n//         _transfer(_msgSender(), recipient, amount);\n//         return true;\n//     }\n\n//     /**\n//      * @dev See {IERC20-allowance}.\n//      */\n//     function allowance(address owner, address spender) public view virtual override returns (uint256) {\n//         return _allowances[owner][spender];\n//     }\n\n//     /**\n//      * @dev See {IERC20-approve}.\n//      *\n//      * Requirements:\n//      *\n//      * - `spender` cannot be the zero address.\n//      */\n//     function approve(address spender, uint256 amount) public virtual override returns (bool) {\n//         _approve(_msgSender(), spender, amount);\n//         return true;\n//     }\n\n//     /**\n//      * @dev See {IERC20-transferFrom}.\n//      *\n//      * Emits an {Approval} event indicating the updated allowance. This is not\n//      * required by the EIP. See the note at the beginning of {ERC20}.\n//      *\n//      * Requirements:\n//      *\n//      * - `sender` and `recipient` cannot be the zero address.\n//      * - `sender` must have a balance of at least `amount`.\n//      * - the caller must have allowance for ``sender``'s tokens of at least\n//      * `amount`.\n//      */\n//     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n//         _transfer(sender, recipient, amount);\n\n//         uint256 currentAllowance = _allowances[sender][_msgSender()];\n//         require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n//         unchecked {\n//             _approve(sender, _msgSender(), currentAllowance - amount);\n//         }\n//         return true;\n//     }\n\n//     /**\n//      * @dev Atomically increases the allowance granted to `spender` by the caller.\n//      *\n//      * This is an alternative to {approve} that can be used as a mitigation for\n//      * problems described in {IERC20-approve}.\n//      *\n//      * Emits an {Approval} event indicating the updated allowance.\n//      *\n//      * Requirements:\n//      *\n//      * - `spender` cannot be the zero address.\n//      */\n//     function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n//         _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n//         return true;\n//     }\n\n//     /**\n//      * @dev Atomically decreases the allowance granted to `spender` by the caller.\n//      *\n//      * This is an alternative to {approve} that can be used as a mitigation for\n//      * problems described in {IERC20-approve}.\n//      *\n//      * Emits an {Approval} event indicating the updated allowance.\n//      *\n//      * Requirements:\n//      *\n//      * - `spender` cannot be the zero address.\n//      * - `spender` must have allowance for the caller of at least\n//      * `subtractedValue`.\n//      */\n//     function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n//         uint256 currentAllowance = _allowances[_msgSender()][spender];\n//         require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n//         unchecked {\n//             _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n//         }\n//         return true;\n//     }\n\n//     /**\n//      * @dev Moves tokens `amount` from `sender` to `recipient`.\n//      *\n//      * This is internal function is equivalent to {transfer}, and can be used to\n//      * e.g. implement automatic token fees, slashing mechanisms, etc.\n//      *\n//      * Emits a {Transfer} event.\n//      *\n//      * Requirements:\n//      *\n//      * - `sender` cannot be the zero address.\n//      * - `recipient` cannot be the zero address.\n//      * - `sender` must have a balance of at least `amount`.\n//      */\n//     function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n//         require(sender != address(0), \"ERC20: transfer from the zero address\");\n//         require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n//         _beforeTokenTransfer(sender, recipient, amount);\n\n//         uint256 senderBalance = _balances[sender];\n//         require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n//         unchecked {\n//             _balances[sender] = senderBalance - amount;\n//         }\n//         _balances[recipient] += amount;\n\n//         emit Transfer(sender, recipient, amount);\n//     }\n\n//     /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n//      * the total supply.\n//      *\n//      * Emits a {Transfer} event with `from` set to the zero address.\n//      *\n//      * Requirements:\n//      *\n//      * - `account` cannot be the zero address.\n//      */\n//     // function _mint(address account, uint256 amount) internal virtual {\n//     function _mint(address account, uint256 amount) public virtual {\n//         require(account != address(0), \"ERC20: mint to the zero address\");\n\n//         _beforeTokenTransfer(address(0), account, amount);\n\n//         _totalSupply += amount;\n//         _balances[account] += amount;\n//         emit Transfer(address(0), account, amount);\n//     }\n\n//     /**\n//      * @dev Destroys `amount` tokens from `account`, reducing the\n//      * total supply.\n//      *\n//      * Emits a {Transfer} event with `to` set to the zero address.\n//      *\n//      * Requirements:\n//      *\n//      * - `account` cannot be the zero address.\n//      * - `account` must have at least `amount` tokens.\n//      */\n//     function _burn(address account, uint256 amount) internal virtual {\n//         require(account != address(0), \"ERC20: burn from the zero address\");\n\n//         _beforeTokenTransfer(account, address(0), amount);\n\n//         uint256 accountBalance = _balances[account];\n//         require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n//         unchecked {\n//             _balances[account] = accountBalance - amount;\n//         }\n//         _totalSupply -= amount;\n\n//         emit Transfer(account, address(0), amount);\n//     }\n\n//     /**\n//      * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n//      *\n//      * This internal function is equivalent to `approve`, and can be used to\n//      * e.g. set automatic allowances for certain subsystems, etc.\n//      *\n//      * Emits an {Approval} event.\n//      *\n//      * Requirements:\n//      *\n//      * - `owner` cannot be the zero address.\n//      * - `spender` cannot be the zero address.\n//      */\n//     function _approve(address owner, address spender, uint256 amount) internal virtual {\n//         require(owner != address(0), \"ERC20: approve from the zero address\");\n//         require(spender != address(0), \"ERC20: approve to the zero address\");\n\n//         _allowances[owner][spender] = amount;\n//         emit Approval(owner, spender, amount);\n//     }\n\n//     /**\n//      * @dev Hook that is called before any transfer of tokens. This includes\n//      * minting and burning.\n//      *\n//      * Calling conditions:\n//      *\n//      * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n//      * will be to transferred to `to`.\n//      * - when `from` is zero, `amount` tokens will be minted for `to`.\n//      * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n//      * - `from` and `to` are never both zero.\n//      *\n//      * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n//      */\n//     function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n// }\n",
  "sourcePath": "/home/rems/block/lol/contracts/finance/TestCoin.sol",
  "ast": {
    "absolutePath": "/home/rems/block/lol/contracts/finance/TestCoin.sol",
    "exportedSymbols": {
      "Context": [
        2404
      ],
      "ERC20": [
        1758
      ],
      "IERC20": [
        1836
      ],
      "IERC20Metadata": [
        1861
      ],
      "TestCoin": [
        864
      ]
    },
    "id": 865,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 824,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 825,
        "nodeType": "ImportDirective",
        "scope": 865,
        "sourceUnit": 1759,
        "src": "253:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 826,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1758,
              "src": "331:5:4"
            },
            "id": 827,
            "nodeType": "InheritanceSpecifier",
            "src": "331:5:4"
          }
        ],
        "contractDependencies": [
          1758,
          1836,
          1861,
          2404
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 864,
        "linearizedBaseContracts": [
          864,
          1758,
          1861,
          1836,
          2404
        ],
        "name": "TestCoin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "381:39:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "397:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "397:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "353030",
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "409:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        }
                      ],
                      "id": 834,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "391:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "391:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "391:22:4"
                }
              ]
            },
            "id": 841,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54657374436f696e",
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "363:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_941bfa86dba4725c42d69bb1577266a3ce7dd267a4c14039416b725786605ff4",
                      "typeString": "literal_string \"TestCoin\""
                    },
                    "value": "TestCoin"
                  },
                  {
                    "hexValue": "545354",
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "375:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                      "typeString": "literal_string \"TST\""
                    },
                    "value": "TST"
                  }
                ],
                "id": 832,
                "modifierName": {
                  "id": 829,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1758,
                  "src": "357:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "357:24:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "354:2:4"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:4"
            },
            "scope": 864,
            "src": "343:77:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "487:36:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 849,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "502:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 850,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "510:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 848,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "496:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "496:21:4"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "439:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "456:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:33:4"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:4"
            },
            "scope": 864,
            "src": "425:98:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1326
            ],
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "593:25:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "610:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 859,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "603:8:4"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 856,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "568:8:4"
            },
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:4"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "586:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:7:4"
            },
            "scope": 864,
            "src": "528:90:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 865,
        "src": "310:311:4"
      }
    ],
    "src": "33:12189:4"
  },
  "legacyAST": {
    "absolutePath": "/home/rems/block/lol/contracts/finance/TestCoin.sol",
    "exportedSymbols": {
      "Context": [
        2404
      ],
      "ERC20": [
        1758
      ],
      "IERC20": [
        1836
      ],
      "IERC20Metadata": [
        1861
      ],
      "TestCoin": [
        864
      ]
    },
    "id": 865,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 824,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 825,
        "nodeType": "ImportDirective",
        "scope": 865,
        "sourceUnit": 1759,
        "src": "253:55:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 826,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1758,
              "src": "331:5:4"
            },
            "id": 827,
            "nodeType": "InheritanceSpecifier",
            "src": "331:5:4"
          }
        ],
        "contractDependencies": [
          1758,
          1836,
          1861,
          2404
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 864,
        "linearizedBaseContracts": [
          864,
          1758,
          1861,
          1836,
          2404
        ],
        "name": "TestCoin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "381:39:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "397:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "397:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "353030",
                        "id": 837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "409:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        },
                        "value": "500"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500_by_1",
                          "typeString": "int_const 500"
                        }
                      ],
                      "id": 834,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "391:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "391:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 839,
                  "nodeType": "ExpressionStatement",
                  "src": "391:22:4"
                }
              ]
            },
            "id": 841,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54657374436f696e",
                    "id": 830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "363:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_941bfa86dba4725c42d69bb1577266a3ce7dd267a4c14039416b725786605ff4",
                      "typeString": "literal_string \"TestCoin\""
                    },
                    "value": "TestCoin"
                  },
                  {
                    "hexValue": "545354",
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "375:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                      "typeString": "literal_string \"TST\""
                    },
                    "value": "TST"
                  }
                ],
                "id": 832,
                "modifierName": {
                  "id": 829,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1758,
                  "src": "357:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "357:24:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "354:2:4"
            },
            "returnParameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "381:0:4"
            },
            "scope": 864,
            "src": "343:77:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 853,
              "nodeType": "Block",
              "src": "487:36:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 849,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "502:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 850,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 845,
                        "src": "510:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 848,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1639,
                      "src": "496:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 852,
                  "nodeType": "ExpressionStatement",
                  "src": "496:21:4"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "439:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "456:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "456:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "438:33:4"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "487:0:4"
            },
            "scope": 864,
            "src": "425:98:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1326
            ],
            "body": {
              "id": 862,
              "nodeType": "Block",
              "src": "593:25:4",
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "610:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 859,
                  "id": 861,
                  "nodeType": "Return",
                  "src": "603:8:4"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 856,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "568:8:4"
            },
            "parameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:2:4"
            },
            "returnParameters": {
              "id": 859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 858,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 863,
                  "src": "586:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 857,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:7:4"
            },
            "scope": 864,
            "src": "528:90:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 865,
        "src": "310:311:4"
      }
    ],
    "src": "33:12189:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xEb385aD75A2628AfF71125C855EF31415c136511",
      "transactionHash": "0x79655a50d78659d5ed0adb12a190c6729b9c180228ddf26603f3b39d3dd42436"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-28T15:38:54.279Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}